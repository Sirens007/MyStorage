<!doctype lake><title>数据结构</title><meta name="doc-version" content="1" /><meta name="viewport" content="fixed" /><meta name="typography" content="classic" /><meta name="paragraphSpacing" content="relax" /><h1 data-lake-id="udl71" id="udl71" collapsed="true"><span data-lake-id="u94a34609" id="u94a34609">Lesson1--数据结构前言</span></h1><h2 data-lake-id="Xi3gj" id="Xi3gj"><span data-lake-id="u99d1a399" id="u99d1a399">1.什么是数据结构？</span></h2><p data-lake-id="u6df66259" id="u6df66259"><span data-lake-id="u9d0a847d" id="u9d0a847d" class="lake-fontsize-12" style="color: rgb(51,51,51)">数据结构(Data Structure)是计算机存储、组织数据的方式，指相互之间存在一种或多种特定关系的数据元素的集合。</span></p><h2 data-lake-id="w3S7h" id="w3S7h"><span data-lake-id="ub80a3c28" id="ub80a3c28" style="color: rgb(51,51,51)">2.什么是算法？</span></h2><p data-lake-id="u89979a5b" id="u89979a5b"><span data-lake-id="ued30e6c8" id="ued30e6c8" class="lake-fontsize-12" style="color: rgb(51,51,51)">算法(Algorithm):就是定义良好的计算过程，他取一个或一组的值为输入，并产生出一个或一组值作为 输出。简单来说算法就是一系列的计算步骤，用来将输入数据转化成输出结果。</span></p><h2 data-lake-id="u3MYG" id="u3MYG"><span data-lake-id="u2a6bc7d7" id="u2a6bc7d7">3.数据结构和算法的重要性</span></h2><p data-lake-id="u384ef177" id="u384ef177" style="text-align: left"><strong><span data-lake-id="u0ca49a38" id="u0ca49a38" class="lake-fontsize-12" style="color: rgb(51,51,51)">在校园招聘的笔试中：</span></strong></p><p data-lake-id="u097f7913" id="u097f7913" style="text-align: left"><span data-lake-id="ua10be86a" id="ua10be86a" class="lake-fontsize-12" style="color: rgb(119,119,119)">目前校园招聘笔试一般采用</span><span data-lake-id="u3b5f16e9" id="u3b5f16e9" class="lake-fontsize-12" style="color: rgb(119,119,119)">Online</span><span data-lake-id="u30978d7e" id="u30978d7e" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u11052e06" id="u11052e06" class="lake-fontsize-12" style="color: rgb(119,119,119)">Judge</span><span data-lake-id="u55140237" id="u55140237" class="lake-fontsize-12" style="color: rgb(119,119,119)">形式，</span><span data-lake-id="ud517447b" id="ud517447b" class="lake-fontsize-12" style="color: rgb(119,119,119)">一般都是</span><span data-lake-id="ue9327e5e" id="ue9327e5e" class="lake-fontsize-12" style="color: rgb(119,119,119)">20-30</span><span data-lake-id="u3b446f19" id="u3b446f19" class="lake-fontsize-12" style="color: rgb(119,119,119)">道选择题</span><span data-lake-id="u8366b9be" id="u8366b9be" class="lake-fontsize-12" style="color: rgb(119,119,119)">+2</span><span data-lake-id="ub100abe0" id="ub100abe0" class="lake-fontsize-12" style="color: rgb(119,119,119)">道编程题，或者</span><span data-lake-id="u5c0beb2c" id="u5c0beb2c" class="lake-fontsize-12" style="color: rgb(119,119,119)">3-4</span><span data-lake-id="u1e004aa6" id="u1e004aa6" class="lake-fontsize-12" style="color: rgb(119,119,119)">道</span><span data-lake-id="u146960f6" id="u146960f6" class="lake-fontsize-12" style="color: rgb(119,119,119)">编程题。</span></p><p data-lake-id="u78261fac" id="u78261fac" style="text-align: left"><a href="https://www.nowcoder.com/test/35396318/summary" target="_blank" data-lake-id="uce0851c0" id="uce0851c0"><span data-lake-id="u11bac10e" id="u11bac10e" class="lake-fontsize-12">2020奇安信秋招C/C++方向</span></a><a href="https://www.nowcoder.com/test/28665243/summary" target="_blank" data-lake-id="u2722515e" id="u2722515e"><span data-lake-id="u90a3f50d" id="u90a3f50d" class="lake-fontsize-12">美团2021校招笔试</span></a></p><p data-lake-id="u1092c127" id="u1092c127" style="text-align: left"><a href="https://www.nowcoder.com/test/27977147/summary" target="_blank" data-lake-id="u72b003d0" id="u72b003d0"><span data-lake-id="ub199ab5f" id="ub199ab5f" class="lake-fontsize-12">网易2021校招笔试-C++开发工程师</span></a></p><p data-lake-id="ub21c8281" id="ub21c8281"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748352919086-f30d07d9-d951-4e9e-8dd3-105ff2257bfa.png%22%2C%22taskId%22%3A%22uf9e33df1-cb51-4afc-8ec7-96594fe4567%22%2C%22clientId%22%3A%22uc4446ac0-28d2-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A208%2C%22height%22%3A95%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A178973%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A312%2C%22originHeight%22%3A143%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%222020%E5%A5%87%E5%AE%89%E4%BF%A1%E7%A7%8B%E6%8B%9BC%2FC%2B%2B%E6%96%B9%E5%90%91%E8%AF%95%E5%8D%B71%22%2C%22x%22%3A2%2C%22y%22%3A0%2C%22width%22%3A230%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%22%E4%B8%8D%E5%AE%9A%E9%A1%B9%E9%80%89%E6%8B%A9%E9%A2%98%22%2C%22x%22%3A145%2C%22y%22%3A92%2C%22width%22%3A61%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E4%BC%81%E4%B8%9A%E7%8B%AC%E5%AE%B6%E6%8E%88%E6%9D%83%22%2C%22x%22%3A249%2C%22y%22%3A0%2C%22width%22%3A62%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22C%2B%2B%E5%B7%A5%E7%A8%8B%E5%B8%82%22%2C%22x%22%3A82%2C%22y%22%3A49%2C%22width%22%3A51%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%22%E5%8C%B9%E9%85%8D%E7%A7%AF%E7%AB%8B%22%2C%22x%22%3A29%2C%22y%22%3A48%2C%22width%22%3A39%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E5%8D%95%E9%80%89%E9%A2%98%22%2C%22x%22%3A80%2C%22y%22%3A92%2C%22width%22%3A32%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E7%BC%96%E7%A8%8B%E9%A2%98%22%2C%22x%22%3A235%2C%22y%22%3A92%2C%22width%22%3A34%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%E8%B4%A8%E8%A5%BF%22%2C%22x%22%3A38%2C%22y%22%3A92%2C%22width%22%3A19%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%22%E7%8E%AB%E9%87%8F%22%2C%22x%22%3A38%2C%22y%22%3A121%2C%22width%22%3A19%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%2222%22%2C%22x%22%3A90%2C%22y%22%3A122%2C%22width%22%3A12%2C%22height%22%3A8%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f3efef%22%2C%22id%22%3A%22udea59f99%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748352921861-9c0da93e-704c-4d3c-99e5-4a5bf10dd9b2.png%22%2C%22taskId%22%3A%22uec35ee9a-5f5d-4eca-9991-70721d8813a%22%2C%22clientId%22%3A%22uc4446ac0-28d2-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A254.66666666666666%2C%22height%22%3A119%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A272687%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A382%2C%22originHeight%22%3A178%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%22%2C%22x%22%3Anull%2C%22y%22%3A0%2C%22width%22%3Anull%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22%E5%B7%A5%E7%A8%8B%E5%B8%88%2CIOS%E5%B7%A5%E7%A8%8B%E5%B8%88%2C%E8%AF%B7%E6%B3%95%E5%B7%A5%E7%A8%8B%E5%B8%88%2C%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%22%2C%22x%22%3A123%2C%22y%22%3A66%2C%22width%22%3A192%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%AE%89%E5%8D%93%22%2C%22x%22%3A240%2C%22y%22%3A48%2C%22width%22%3A80%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22C%2B%2B%E5%B7%A5%E7%A8%8B%E5%B8%88%22%2C%22x%22%3A181%2C%22y%22%3A48%2C%22width%22%3A55%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22JAVA%E5%B7%A5%E6%98%9F%E5%B8%85%22%2C%22x%22%3A122%2C%22y%22%3A49%2C%22width%22%3A55%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E9%85%8D%E4%BD%8D%22%2C%22x%22%3A67%2C%22y%22%3A48%2C%22width%22%3A41%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E7%BC%96%E7%A8%8B%E9%A2%98%22%2C%22x%22%3A231%2C%22y%22%3A128%2C%22width%22%3A31%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%22%2C%22x%22%3A122%2C%22y%22%3A84%2C%22width%22%3A43%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E6%95%B0%E9%87%8F%22%2C%22x%22%3A110%2C%22y%22%3A157%2C%22width%22%3A21%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E5%B8%81%E5%BC%80%22%2C%22x%22%3A111%2C%22y%22%3A128%2C%22width%22%3A19%2C%22height%22%3A8%7D%2C%7B%22text%22%3A%22V%E4%BC%81%E4%B8%9A%E7%8B%AC%E5%AE%B6%E6%8E%88%E6%9D%83%22%2C%22x%22%3A293%2C%22y%22%3A0%2C%22width%22%3A89%2C%22height%22%3A11%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f7f6f5%22%2C%22id%22%3A%22u0283a120%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u3c96ccec" id="u3c96ccec"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748352925025-ee8f6a13-ed28-4f7d-a046-8ac0c5f2a427.png%22%2C%22taskId%22%3A%22u75d5aac5-b857-4cd2-a6c7-02df27bd177%22%2C%22clientId%22%3A%22uc4446ac0-28d2-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A226.66666666666666%2C%22height%22%3A105%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A215469%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A340%2C%22originHeight%22%3A158%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%22%2C%22x%22%3Anull%2C%22y%22%3A0%2C%22width%22%3Anull%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%22(%E6%AD%A3%E5%BC%8F%E7%AC%AC%E4%BA%8C%E6%89%B9)%22%2C%22x%22%3A221%2C%22y%22%3A0%2C%22width%22%3A87%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%22%E4%BC%81%E4%B8%9A%E7%8B%AC%E5%AE%B6%E6%8E%88%E6%9D%83%22%2C%22x%22%3A137%2C%22y%22%3A18%2C%22width%22%3A60%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22C%2B%2B%E5%B7%A5%E7%A8%8B%E5%B8%81%22%2C%22x%22%3A99%2C%22y%22%3A64%2C%22width%22%3A51%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E5%8C%B9%E9%85%8D%E8%AE%B0%E8%81%8C%E4%BD%8D%22%2C%22x%22%3A42%2C%22y%22%3A64%2C%22width%22%3A42%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E7%BC%96%E4%BF%9D%22%2C%22x%22%3A142%2C%22y%22%3A108%2C%22width%22%3A31%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E9%97%AE%E7%AD%94%E9%A2%98%22%2C%22x%22%3A235%2C%22y%22%3A107%2C%22width%22%3A31%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%E6%94%B9%E9%87%8F%22%2C%22x%22%3A66%2C%22y%22%3A137%2C%22width%22%3A20%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E9%A2%84%E8%A5%BF%22%2C%22x%22%3A67%2C%22y%22%3A108%2C%22width%22%3A19%2C%22height%22%3A9%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f7f6f5%22%2C%22id%22%3A%22ueaf50a4e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="ube75dcb8" id="ube75dcb8"><br></p><p data-lake-id="ub153e8e7" id="ub153e8e7" style="text-align: left"><span data-lake-id="u28b53660" id="u28b53660" class="lake-fontsize-12" style="color: rgb(119,119,119)">可以看出，现在</span><strong><span data-lake-id="u839d3e9d" id="u839d3e9d" class="lake-fontsize-12" style="color: rgb(119,119,119)">公司对学生代码能力的要求是越来越高了，大厂笔试中几</span></strong><strong><span data-lake-id="uf4e5449b" id="uf4e5449b" class="lake-fontsize-12" style="color: rgb(119,119,119)">Ⓖ全是算法题而且难度</span></strong><strong><span data-lake-id="u473d500a" id="u473d500a" class="lake-fontsize-12" style="color: rgb(119,119,119)">大，中小长的笔试中才会有算法题</span></strong><span data-lake-id="uc93efe7c" id="uc93efe7c" class="lake-fontsize-12" style="color: rgb(119,119,119)">。算法不仅笔试中考察，面试中面试官基本都会让现场写代</span><span data-lake-id="u14dcab97" id="u14dcab97" class="lake-fontsize-12" style="color: rgb(119,119,119)">码。而算法能力短期内无法快速提高了，至少需要持续半年以上算法训练积累，否则真正校招时</span><span data-lake-id="uc5553b25" id="uc5553b25" class="lake-fontsize-12" style="color: rgb(119,119,119)">笔试会很艰难，因此算法要早早准备。</span></p><p data-lake-id="u540f96fd" id="u540f96fd" style="text-align: left"><strong><span data-lake-id="u01e7986f" id="u01e7986f" class="lake-fontsize-12" style="color: rgb(51,51,51)">在校园招聘的面试中：</span></strong></p><p data-lake-id="u285a4d37" id="u285a4d37"><span data-lake-id="uf0822688" id="uf0822688" class="lake-fontsize-12">​</span><strong><span data-lake-id="u9fbf404a" id="u9fbf404a" class="lake-fontsize-12" style="color: rgb(119,119,119)">某学长CVTE面试：</span></strong></p><p data-lake-id="u0f4efe39" id="u0f4efe39" style="text-align: left"><span data-lake-id="u4d233b7e" id="u4d233b7e" class="lake-fontsize-12" style="color: rgb(119,119,119)">1.</span><span data-lake-id="u8bc83161" id="u8bc83161" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u2221f227" id="u2221f227" class="lake-fontsize-12" style="color: rgb(119,119,119)">怎么计算一个类到底实例化了多少对象？</span></p><p data-lake-id="u4cd48914" id="u4cd48914" style="text-align: left"><span data-lake-id="ud5f0e451" id="ud5f0e451" class="lake-fontsize-12" style="color: rgb(119,119,119)">2.</span><span data-lake-id="u550b6c1f" id="u550b6c1f" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u6dad1061" id="u6dad1061" class="lake-fontsize-12" style="color: rgb(119,119,119)">如果还有一个派生类继承了这个类，那么如何计算这两个类，各自实例化了多少对象？</span></p><p data-lake-id="ude7a962b" id="ude7a962b" style="text-align: left"><span data-lake-id="u1fb0d864" id="u1fb0d864" class="lake-fontsize-12" style="color: rgb(119,119,119)">3.</span><span data-lake-id="u03a4e9e9" id="u03a4e9e9" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u1ff9ecfb" id="u1ff9ecfb" class="lake-fontsize-12" style="color: rgb(119,119,119)">你了解联合体和结构体吗？</span></p><p data-lake-id="u630795cb" id="u630795cb" style="text-align: left"><span data-lake-id="uf0873cc8" id="uf0873cc8" class="lake-fontsize-12" style="color: rgb(119,119,119)">4.</span><span data-lake-id="u7c6be9ff" id="u7c6be9ff" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u3a7494f7" id="u3a7494f7" class="lake-fontsize-12" style="color: rgb(119,119,119)">如何测试一个机器是大端还是小端？</span></p><p data-lake-id="u76dd8c8d" id="u76dd8c8d"><span data-lake-id="u44fd1aa9" id="u44fd1aa9" class="lake-fontsize-12" style="color: rgb(119,119,119)">5. </span><strong><span data-lake-id="ud5d98be1" id="ud5d98be1" class="lake-fontsize-12" style="color: rgb(119,119,119)">你了解队列和栈吗？</span></strong></p><p data-lake-id="u271c754c" id="u271c754c" style="text-align: left"><span data-lake-id="ucc105ea6" id="ucc105ea6" class="lake-fontsize-12" style="color: rgb(119,119,119)">6.</span><span data-lake-id="u8c25106e" id="u8c25106e" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="uf5b04652" id="uf5b04652" class="lake-fontsize-12" style="color: rgb(119,119,119)">怎么用两个栈实现一个队列。</span></strong></p><p data-lake-id="u032e8372" id="u032e8372" style="text-align: left"><span data-lake-id="u0c4d1fbd" id="u0c4d1fbd" class="lake-fontsize-12" style="color: rgb(119,119,119)">7.</span><span data-lake-id="ue3a097c0" id="ue3a097c0" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="ub37b8caa" id="ub37b8caa" class="lake-fontsize-12" style="color: rgb(119,119,119)">你使用过模版吗？</span></p><p data-lake-id="uaa8269f0" id="uaa8269f0" style="text-align: left"><span data-lake-id="ua8353145" id="ua8353145" class="lake-fontsize-12" style="color: rgb(119,119,119)">8.</span><span data-lake-id="u8c34a73f" id="u8c34a73f" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u9aa26b79" id="u9aa26b79" class="lake-fontsize-12" style="color: rgb(119,119,119)">写一个比较两个数大小的模板函数。</span></p><p data-lake-id="u0a2163cb" id="u0a2163cb" style="text-align: left"><span data-lake-id="u501375a9" id="u501375a9" class="lake-fontsize-12" style="color: rgb(119,119,119)">9.</span><span data-lake-id="u332b10d3" id="u332b10d3" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="uf3925824" id="uf3925824" class="lake-fontsize-12" style="color: rgb(119,119,119)">你使用过容器吗？</span></strong></p><p data-lake-id="ua9b439ea" id="ua9b439ea" style="text-align: left"><span data-lake-id="ubd2a4d03" id="ubd2a4d03" class="lake-fontsize-12" style="color: rgb(119,119,119)">10.</span><span data-lake-id="u9f486a87" id="u9f486a87" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="u34036f85" id="u34036f85" class="lake-fontsize-12" style="color: rgb(119,119,119)">判断两个链表是否相交。</span></strong></p><p data-lake-id="u86626d7b" id="u86626d7b" style="text-align: left"><span data-lake-id="u2682dffd" id="u2682dffd" class="lake-fontsize-12" style="color: rgb(119,119,119)">11.</span><span data-lake-id="ud2042ed2" id="ud2042ed2" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="u7d392300" id="u7d392300" class="lake-fontsize-12" style="color: rgb(119,119,119)">Vector</span></strong><strong><span data-lake-id="u6ae068e9" id="u6ae068e9" class="lake-fontsize-12" style="color: rgb(119,119,119)">和数组的区别。</span></strong></p><p data-lake-id="u97a0e736" id="u97a0e736" style="text-align: left"><span data-lake-id="u09b8f6b7" id="u09b8f6b7" class="lake-fontsize-12" style="color: rgb(119,119,119)">12.</span><span data-lake-id="ue72f99cd" id="ue72f99cd" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u3626acb4" id="u3626acb4" class="lake-fontsize-12" style="color: rgb(119,119,119)">你在学校里做的最满意的一个项目是什么？简述一下这个项目。</span></p><p data-lake-id="u9f9bcf2a" id="u9f9bcf2a" style="text-align: left"><span data-lake-id="ub9a5e13e" id="ub9a5e13e" class="lake-fontsize-12" style="color: rgb(119,119,119)">​</span><br></p><p data-lake-id="u8d29728a" id="u8d29728a"><strong><span data-lake-id="ud0ca63e9" id="ud0ca63e9" class="lake-fontsize-12" style="color: rgb(119,119,119)">某学长腾讯的面试：</span></strong></p><p data-lake-id="u05404704" id="u05404704" style="text-align: left"><span data-lake-id="ubb753eb7" id="ubb753eb7" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><span data-lake-id="u10b19829" id="u10b19829" class="lake-fontsize-12" style="color: rgb(119,119,119)">、自我介绍</span></p><p data-lake-id="ud73ac673" id="ud73ac673"><span data-lake-id="ub4b994cf" id="ub4b994cf" class="lake-fontsize-12" style="color: rgb(119,119,119)">2、</span><strong><span data-lake-id="u4293246a" id="u4293246a" class="lake-fontsize-12" style="color: rgb(119,119,119)">学习STL具体是怎么开展的？</span></strong></p><p data-lake-id="ua5d18478" id="ua5d18478" style="text-align: left"><span data-lake-id="uc219e4d3" id="uc219e4d3" class="lake-fontsize-12" style="color: rgb(119,119,119)">3</span><span data-lake-id="u337b9600" id="u337b9600" class="lake-fontsize-12" style="color: rgb(119,119,119)">、如果一款产品给你怎么检测内存泄露？</span></p><p data-lake-id="u68984e62" id="u68984e62" style="text-align: left"><span data-lake-id="u354d87a0" id="u354d87a0" class="lake-fontsize-12" style="color: rgb(119,119,119)">4</span><span data-lake-id="u0c6ed9f0" id="u0c6ed9f0" class="lake-fontsize-12" style="color: rgb(119,119,119)">、进程间通信方式，共享内存是怎么实现的，会出现什么问题，怎么解决？</span></p><p data-lake-id="u7bf09c91" id="u7bf09c91" style="text-align: left"><span data-lake-id="u7caeeb2a" id="u7caeeb2a" class="lake-fontsize-12" style="color: rgb(119,119,119)">5</span><span data-lake-id="u36aed0ac" id="u36aed0ac" class="lake-fontsize-12" style="color: rgb(119,119,119)">、</span><span data-lake-id="u708774ca" id="u708774ca" class="lake-fontsize-12" style="color: rgb(119,119,119)">TCP</span><span data-lake-id="u48ab852a" id="u48ab852a" class="lake-fontsize-12" style="color: rgb(119,119,119)">为什么是可靠的？可靠是怎么保证的？为什么要三次握手？为什么三次握手就可以可靠？</span></p><p data-lake-id="u0caa1d79" id="u0caa1d79" style="text-align: left"><span data-lake-id="u2f9170ab" id="u2f9170ab" class="lake-fontsize-12" style="color: rgb(119,119,119)">6</span><span data-lake-id="ue5b5512e" id="ue5b5512e" class="lake-fontsize-12" style="color: rgb(119,119,119)">、</span><span data-lake-id="ucba01ba4" id="ucba01ba4" class="lake-fontsize-12" style="color: rgb(119,119,119)">Http</span><span data-lake-id="ua348b36b" id="ua348b36b" class="lake-fontsize-12" style="color: rgb(119,119,119)">数据分包问题；</span><span data-lake-id="ue1f6bfa1" id="ue1f6bfa1" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u6ca657d4" id="u6ca657d4" class="lake-fontsize-12" style="color: rgb(119,119,119)">7</span><span data-lake-id="ude16538b" id="ude16538b" class="lake-fontsize-12" style="color: rgb(119,119,119)">、</span><strong><span data-lake-id="uc6aa8312" id="uc6aa8312" class="lake-fontsize-12" style="color: rgb(119,119,119)">Vector</span></strong><strong><span data-lake-id="ue00eccf4" id="ue00eccf4" class="lake-fontsize-12" style="color: rgb(119,119,119)">相关；</span></strong></p><p data-lake-id="ue86c90c9" id="ue86c90c9"><span data-lake-id="ub979e7b4" id="ub979e7b4" class="lake-fontsize-12" style="color: rgb(119,119,119)">8、</span><strong><span data-lake-id="u5a925710" id="u5a925710" class="lake-fontsize-12" style="color: rgb(119,119,119)">Hashmap相关；</span></strong></p><p data-lake-id="u31d727f3" id="u31d727f3" style="text-align: left"><span data-lake-id="u4a3c1a6a" id="u4a3c1a6a" class="lake-fontsize-12" style="color: rgb(119,119,119)">9</span><span data-lake-id="u75a671a9" id="u75a671a9" class="lake-fontsize-12" style="color: rgb(119,119,119)">、</span><strong><span data-lake-id="ud643030f" id="ud643030f" class="lake-fontsize-12" style="color: rgb(119,119,119)">红黑树的原理、时间复杂度等；</span></strong></p><p data-lake-id="u1289b43d" id="u1289b43d" style="text-align: left"><span data-lake-id="u5cf910d3" id="u5cf910d3" class="lake-fontsize-12" style="color: rgb(119,119,119)">10、Memcpy和memmove的区别；</span></p><p data-lake-id="u05bad30e" id="u05bad30e" style="text-align: left"><span data-lake-id="u66d0b3e7" id="u66d0b3e7" class="lake-fontsize-12" style="color: rgb(119,119,119)">11</span><span data-lake-id="u36f6691b" id="u36f6691b" class="lake-fontsize-12" style="color: rgb(119,119,119)">、客户端给服务器发送数据，意图发送</span><span data-lake-id="u4b11a6e6" id="u4b11a6e6" class="lake-fontsize-12" style="color: rgb(119,119,119)">aaa</span><span data-lake-id="u81b49f49" id="u81b49f49" class="lake-fontsize-12" style="color: rgb(119,119,119)">，然后再发</span><span data-lake-id="ue3e83e4d" id="ue3e83e4d" class="lake-fontsize-12" style="color: rgb(119,119,119)">bbb</span><span data-lake-id="u7f40e75e" id="u7f40e75e" class="lake-fontsize-12" style="color: rgb(119,119,119)">，但是可能会出现</span><span data-lake-id="u6cc4b9c7" id="u6cc4b9c7" class="lake-fontsize-12" style="color: rgb(119,119,119)">aaabbb</span><span data-lake-id="u7e15cfc2" id="u7e15cfc2" class="lake-fontsize-12" style="color: rgb(119,119,119)">这种情</span><span data-lake-id="u13a6ecd7" id="u13a6ecd7" class="lake-fontsize-12" style="color: rgb(119,119,119)">况，如何处理？</span></p><p data-lake-id="u6c3e5dfa" id="u6c3e5dfa" style="text-align: left"><span data-lake-id="u6126e14c" id="u6126e14c" class="lake-fontsize-12" style="color: rgb(119,119,119)">12</span><span data-lake-id="u8d9ef002" id="u8d9ef002" class="lake-fontsize-12" style="color: rgb(119,119,119)">、游戏的邮件服务器中每天会有玩家频繁的创建邮件和删除邮件，海量数据、大小不一，会有</span><span data-lake-id="u1392579e" id="u1392579e" class="lake-fontsize-12" style="color: rgb(119,119,119)">哪些场景，怎么存储，邮件是怎么到内存的？</span></p><p data-lake-id="u9bf06252" id="u9bf06252" style="text-align: left"><span data-lake-id="udc1c0ba2" id="udc1c0ba2" class="lake-fontsize-12" style="color: rgb(119,119,119)">13</span><span data-lake-id="uda5d35c4" id="uda5d35c4" class="lake-fontsize-12" style="color: rgb(119,119,119)">、写一道算法题</span></p><p data-lake-id="ub6483bc0" id="ub6483bc0"><strong><span data-lake-id="u49833267" id="u49833267" class="lake-fontsize-12" style="color: rgb(119,119,119)">某学姐百度的面试：</span></strong></p><p data-lake-id="u5d851faa" id="u5d851faa" style="text-align: left"><span data-lake-id="u66efd2d9" id="u66efd2d9" class="lake-fontsize-12" style="color: rgb(119,119,119)">1.</span><span data-lake-id="u2a6d6433" id="u2a6d6433" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="u3204aef3" id="u3204aef3" class="lake-fontsize-12" style="color: rgb(119,119,119)">手写五道题，三道编程题</span></strong><span data-lake-id="ud51bd59f" id="ud51bd59f" class="lake-fontsize-12" style="color: rgb(119,119,119)">，一道数据库，一道</span><span data-lake-id="u889f35d7" id="u889f35d7" class="lake-fontsize-12" style="color: rgb(119,119,119)">linux</span></p><p data-lake-id="ua84b225a" id="ua84b225a" style="text-align: left"><span data-lake-id="u26342a70" id="u26342a70" class="lake-fontsize-12" style="color: rgb(119,119,119)">2.</span><span data-lake-id="u57661064" id="u57661064" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u2ab10a40" id="u2ab10a40" class="lake-fontsize-12" style="color: rgb(119,119,119)">数据库的题两问</span></p><p data-lake-id="uaa701406" id="uaa701406"><span data-lake-id="u13395ec6" id="u13395ec6" class="lake-fontsize-12" style="color: rgb(119,119,119)">3. </span><strong><span data-lake-id="u725cb5d0" id="u725cb5d0" class="lake-fontsize-12" style="color: rgb(119,119,119)">算法了解的如何，插入排序编程</span></strong></p><p data-lake-id="uaf54695a" id="uaf54695a" style="text-align: left"><span data-lake-id="u444c0baf" id="u444c0baf" class="lake-fontsize-12" style="color: rgb(119,119,119)">4.</span><span data-lake-id="u2c374601" id="u2c374601" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u81c6ff97" id="u81c6ff97" class="lake-fontsize-12" style="color: rgb(119,119,119)">说一下</span><span data-lake-id="u890a734f" id="u890a734f" class="lake-fontsize-12" style="color: rgb(119,119,119)">IP,TCP,ARP</span></p><p data-lake-id="u629da7c2" id="u629da7c2" style="text-align: left"><span data-lake-id="u82473ea7" id="u82473ea7" class="lake-fontsize-12" style="color: rgb(119,119,119)">5.</span><span data-lake-id="u693800c1" id="u693800c1" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u098a0208" id="u098a0208" class="lake-fontsize-12" style="color: rgb(119,119,119)">内核是什么</span></p><p data-lake-id="uc23e0709" id="uc23e0709"><span data-lake-id="ufbe3e016" id="ufbe3e016" class="lake-fontsize-12">​</span><span data-lake-id="u46f5ad80" id="u46f5ad80" class="lake-fontsize-12" style="color: rgb(119,119,119)">6. IP层主要功能</span></p><p data-lake-id="ue2983001" id="ue2983001"><span data-lake-id="ubbdeb4c4" id="ubbdeb4c4" class="lake-fontsize-12" style="color: rgb(119,119,119)">7. </span><strong><span data-lake-id="uc8c7bd03" id="uc8c7bd03" class="lake-fontsize-12" style="color: rgb(119,119,119)">map和set底层</span></strong></p><p data-lake-id="ud0f0a85d" id="ud0f0a85d" style="text-align: left"><span data-lake-id="u27b56dc1" id="u27b56dc1" class="lake-fontsize-12" style="color: rgb(119,119,119)">8.</span><span data-lake-id="u098fac8b" id="u098fac8b" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u056f21b0" id="u056f21b0" class="lake-fontsize-12" style="color: rgb(119,119,119)">bootstrap</span><span data-lake-id="u2f4edb55" id="u2f4edb55" class="lake-fontsize-12" style="color: rgb(119,119,119)">的用法</span><span data-lake-id="u299ebc54" id="u299ebc54" class="lake-fontsize-12" style="color: rgb(119,119,119)">,html,html</span><span data-lake-id="u9fca93a1" id="u9fca93a1" class="lake-fontsize-12" style="color: rgb(119,119,119)">的全称</span></p><p data-lake-id="u5175f653" id="u5175f653" style="text-align: left"><span data-lake-id="u4898b581" id="u4898b581" class="lake-fontsize-12" style="color: rgb(119,119,119)">9.</span><span data-lake-id="u18de74d3" id="u18de74d3" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u34140835" id="u34140835" class="lake-fontsize-12" style="color: rgb(119,119,119)">你觉得框架和库有啥区别</span></p><p data-lake-id="u30536076" id="u30536076" style="text-align: left"><span data-lake-id="u8da80714" id="u8da80714" class="lake-fontsize-12" style="color: rgb(119,119,119)">10.</span><span data-lake-id="u3eed2fe7" id="u3eed2fe7" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="ucf8b4cc0" id="ucf8b4cc0" class="lake-fontsize-12" style="color: rgb(119,119,119)">代码优化</span></p><p data-lake-id="u3eca74e5" id="u3eca74e5" style="text-align: left"><span data-lake-id="u0dce1fc4" id="u0dce1fc4" class="lake-fontsize-12" style="color: rgb(119,119,119)">11.</span><span data-lake-id="ubb67ce6f" id="ubb67ce6f" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="u65f8c732" id="u65f8c732" class="lake-fontsize-12" style="color: rgb(119,119,119)">哈希表</span></strong><span data-lake-id="u644c4b34" id="u644c4b34" class="lake-fontsize-12" style="color: rgb(119,119,119)">12.shell</span><span data-lake-id="u7eded3bd" id="u7eded3bd" class="lake-fontsize-12" style="color: rgb(119,119,119)">脚本</span></p><p data-lake-id="u191d16b2" id="u191d16b2"><span data-lake-id="u17f71235" id="u17f71235" class="lake-fontsize-12" style="color: rgb(119,119,119)">13. </span><strong><span data-lake-id="ue094a13e" id="ue094a13e" class="lake-fontsize-12" style="color: rgb(119,119,119)">快速排序思想</span></strong></p><p data-lake-id="u7331e021" id="u7331e021" style="text-align: left"><span data-lake-id="uff7005f1" id="uff7005f1" class="lake-fontsize-12" style="color: rgb(119,119,119)">14.</span><span data-lake-id="ue9f47a1d" id="ue9f47a1d" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><strong><span data-lake-id="u84a2d847" id="u84a2d847" class="lake-fontsize-12" style="color: rgb(119,119,119)">递归是什么</span></strong></p><p data-lake-id="u44ea0339" id="u44ea0339" style="text-align: left"><span data-lake-id="u9feade26" id="u9feade26" class="lake-fontsize-12" style="color: rgb(119,119,119)">15.</span><span data-lake-id="u6c0179d5" id="u6c0179d5" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u1f489a91" id="u1f489a91" class="lake-fontsize-12" style="color: rgb(119,119,119)">分治是什么，与递归区别是什么</span></p><p data-lake-id="u9136b77f" id="u9136b77f" style="text-align: left"><span data-lake-id="u7520dedd" id="u7520dedd" class="lake-fontsize-12" style="color: rgb(119,119,119)">16.</span><span data-lake-id="u0f608099" id="u0f608099" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span><span data-lake-id="u6335731d" id="u6335731d" class="lake-fontsize-12" style="color: rgb(119,119,119)">web</span><span data-lake-id="u769e59a7" id="u769e59a7" class="lake-fontsize-12" style="color: rgb(119,119,119)">平台是怎么做的</span><span data-lake-id="ufab66641" id="ufab66641" class="lake-fontsize-12" style="color: rgb(119,119,119)">17.linux</span><span data-lake-id="ucd52ddcc" id="ucd52ddcc" class="lake-fontsize-12" style="color: rgb(119,119,119)">命令</span></p><p data-lake-id="uc85e68c3" id="uc85e68c3" style="text-align: left"><span data-lake-id="u52ef33a0" id="u52ef33a0" class="lake-fontsize-12" style="color: rgb(119,119,119)">18.</span><span data-lake-id="u3b9aafec" id="u3b9aafec" class="lake-fontsize-12" style="color: rgb(119,119,119)">了解些什么前沿的技术，英语怎么样，了解过什么英语的文献</span></p><p data-lake-id="u90bcf5e8" id="u90bcf5e8" style="text-align: left"><strong><span data-lake-id="u1cd5d9f6" id="u1cd5d9f6" class="lake-fontsize-12" style="color: rgb(51,51,51)">在未来的工作中：</span></strong></p><p data-lake-id="u4b6fb061" id="u4b6fb061" style="text-align: left"><a href="https://www.zhihu.com/question/36579347/answer/217323640" target="_blank" data-lake-id="u39f91bdc" id="u39f91bdc"><span data-lake-id="uda362c61" id="uda362c61" class="lake-fontsize-12">数据结构与算法对一个程序员来说的重要性？</span></a></p><p data-lake-id="uc6f0fc0b" id="uc6f0fc0b" style="text-align: left"><a href="https://www.zhihu.com/question/289795606/answer/485134867" target="_blank" data-lake-id="ud758b663" id="ud758b663"><span data-lake-id="u094ea33d" id="u094ea33d" class="lake-fontsize-12">学好算法对一个程序员来说是必须的吗？如果是，至少应该学到哪种程度？</span></a></p><h2 data-lake-id="EQdEy" id="EQdEy"><span data-lake-id="ua25c67fe" id="ua25c67fe">4.</span><strong><span data-lake-id="u1c12e183" id="u1c12e183" class="lake-fontsize-12" style="color: rgb(51,51,51)"> 数据结构和算法书籍及资料推荐</span></strong></h2><p data-lake-id="u55f9e795" id="u55f9e795"><span data-lake-id="u9c7fc7b7" id="u9c7fc7b7" class="lake-fontsize-12" style="color: rgb(119,119,119)">数据结构学习得差不多了，推荐大家都去把《剑指oﬀer》和《程序员代码面试指南》上的题做一遍</span></p><p data-lake-id="u2dd72ce3" id="u2dd72ce3"><a href="https://www.nowcoder.com/ta/coding-interviews?page=1" target="_blank" data-lake-id="u3053040c" id="u3053040c"><span data-lake-id="u19929503" id="u19929503" class="lake-fontsize-12">剑指offerOJ</span></a></p><p data-lake-id="u0f0871f4" id="u0f0871f4"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748353048584-44ddb0e9-ce81-4bce-9093-edd56b5abcf7.png%22%2C%22taskId%22%3A%22uec0d2069-b3bf-43ea-a2b6-0c1e0330f36%22%2C%22clientId%22%3A%22uc4446ac0-28d2-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A524.6666666666666%2C%22height%22%3A303%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1432028%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A787%2C%22originHeight%22%3A454%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22OFFER%22%2C%22x%22%3A94%2C%22y%22%3A122%2C%22width%22%3A174%2C%22height%22%3A50%7D%2C%7B%22text%22%3A%22%E5%90%8D%E4%BC%81%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%A2%98%E7%9B%AE%E6%9C%80%E4%BC%98%E8%A7%A3%22%2C%22x%22%3A454%2C%22y%22%3A133%2C%22width%22%3A253%2C%22height%22%3A21%7D%2C%7B%22text%22%3A%22%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BB%A3%E7%A0%81%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97%22%2C%22x%22%3A455%2C%22y%22%3A100%2C%22width%22%3A228%2C%22height%22%3A28%7D%2C%7B%22text%22%3A%22CODINGLNTERVIEWGUIDE%22%2C%22x%22%3A455%2C%22y%22%3A351%2C%22width%22%3A253%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22%E5%90%8D%E4%BC%81%E9%9D%A2%E8%AF%95%E5%AE%98%E7%B2%BE%E8%AE%B2%22%2C%22x%22%3A176%2C%22y%22%3A172%2C%22width%22%3A100%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%22%E5%9B%BD%E5%B7%A5%E9%A4%90%E5%9B%BD%E5%8C%96%22%2C%22x%22%3A75%2C%22y%22%3A411%2C%22width%22%3A181%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%22%E5%88%9B%E9%95%9C%E5%B9%BF%E5%85%AC%E5%92%8C%E5%9B%BD%E4%B8%9A%E9%80%9F%E5%93%81%22%2C%22x%22%3A524%2C%22y%22%3A393%2C%22width%22%3A127%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E7%A6%8F%22%2C%22x%22%3A58%2C%22y%22%3A106%2C%22width%22%3A37%2C%22height%22%3A77%7D%2C%7B%22text%22%3A%22BPDK%22%2C%22x%22%3A51%2C%22y%22%3A26%2C%22width%22%3A72%2C%22height%22%3A21%7D%2C%7B%22text%22%3A%22%E5%85%B8%E5%9E%8B%E7%BC%96%E7%A8%8B%E9%A2%98%22%2C%22x%22%3A178%2C%22y%22%3A186%2C%22width%22%3A79%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%22EE%22%2C%22x%22%3A456%2C%22y%22%3A34%2C%22width%22%3A53%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22%E4%BD%95%E5%BA%93%E6%B5%B7%E7%99%BD%E5%B1%85%22%2C%22x%22%3A196%2C%22y%22%3A206%2C%22width%22%3A56%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E7%AC%AC2%E7%89%88%22%2C%22x%22%3A265%2C%22y%22%3A136%2C%22width%22%3A50%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22%E5%B7%A6%E7%A8%8B%E4%BA%91%E5%99%A8%22%2C%22x%22%3A664%2C%22y%22%3A176%2C%22width%22%3A42%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22%22%2C%22x%22%3A275%2C%22y%22%3A151%2C%22width%22%3A42%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%22%22%2C%22x%22%3A279%2C%22y%22%3A127%2C%22width%22%3A33%2C%22height%22%3A15%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23d9d1cd%22%2C%22id%22%3A%22ueb4bb443%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u7a857aaf" id="u7a857aaf"><strong><span data-lake-id="u8c596292" id="u8c596292" class="lake-fontsize-12" style="color: rgb(119,119,119)">刷完上面的内容，我们童鞋还可以去刷刷Leetcode</span></strong></p><p data-lake-id="u56fd681d" id="u56fd681d" style="text-align: left"><a href="https://leetcode-cn.com/problemset/all/" target="_blank" data-lake-id="u75ad3371" id="u75ad3371"><span data-lake-id="ud3177552" id="ud3177552" class="lake-fontsize-12">LeetCodeOJ</span></a></p><h1 data-lake-id="CgnmE" id="CgnmE" collapsed="true"><span data-lake-id="u262c2c00" id="u262c2c00">Lesson2--</span><strong><span data-lake-id="u9b3b9346" id="u9b3b9346" class="lake-fontsize-14" style="color: rgb(51,51,51)">算法的时间复杂度和空间复杂度</span></strong></h1><h2 data-lake-id="WnZS3" id="WnZS3"><span data-lake-id="u7a7e1cdb" id="u7a7e1cdb">1.算法效率</span></h2><h3 data-lake-id="UpcDo" id="UpcDo"><span data-lake-id="u4b0decbb" id="u4b0decbb">1.1如何衡量一个算法的好坏</span></h3><p data-lake-id="u449062c3" id="u449062c3"><span data-lake-id="u6df186f0" id="u6df186f0" class="lake-fontsize-12" style="color: rgb(119,119,119)">如何衡量一个算法的好坏呢？比如对于以下斐波那契数列：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22long%20long%20Fib(int%20N)%5Cn%7B%5Cn%20%20%20%20%20if(N%20%3C%203)%5Cn%20%20%20%20%20return%201%3B%5Cn%20%20%20%20%20%5Cn%20%20%20%20%20return%20Fib(N-1)%20%2B%20Fib(N-2)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22e0KJa%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uc383d329" id="uc383d329"><span data-lake-id="ud65de2b2" id="ud65de2b2" class="lake-fontsize-12" style="color: rgb(119,119,119)">斐波那契数列的递归实现方式非常简洁，但简洁一定好吗？那该如何衡量其好与坏呢？</span></p><h3 data-lake-id="mzUEZ" id="mzUEZ"><span data-lake-id="u30cefb29" id="u30cefb29">1.2算法的复杂度</span></h3><p data-lake-id="ud0430711" id="ud0430711"><span data-lake-id="uc1c47476" id="uc1c47476" class="lake-fontsize-12" style="color: rgb(119,119,119)">算法在编写成可执行程序后，运行时需要耗费时间资源和空间(内存)资源 。因此</span><strong><span data-lake-id="u5d08ab6b" id="u5d08ab6b" class="lake-fontsize-12" style="color: rgb(119,119,119)">衡量一个算法的好坏，一般是从时间和空间两个维度来衡量的</span></strong><span data-lake-id="u8f0851d5" id="u8f0851d5" class="lake-fontsize-12" style="color: rgb(119,119,119)">，即时间复杂度和空间复杂度。 </span></p><p data-lake-id="u81df0cbb" id="u81df0cbb"><strong><span data-lake-id="ud9711730" id="ud9711730" class="lake-fontsize-12" style="color: rgb(119,119,119)">时间复杂度主要衡量一个算法的运行快慢，而空间复杂度主要衡量一个算法运行所需要的额外空间</span></strong><span data-lake-id="u7c93c95a" id="u7c93c95a" class="lake-fontsize-12" style="color: rgb(119,119,119)">。在计算机发展的早期，计算机的存储容量很小。所以对空间复杂度很是在乎。但是经过计算机行业的迅速发展，计算机的存储容量已经达到了很高的程度。所以我们如今已经不需要再特别关注一个算法的空间复杂度。</span></p><h3 data-lake-id="BX8Jy" id="BX8Jy" collapsed="true"><span data-lake-id="u8618315d" id="u8618315d" style="color: #262626">1.3复杂度在校招中的考察</span></h3><p data-lake-id="u9bc089bc" id="u9bc089bc"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748356952460-f9dd0a6b-701d-454a-afe6-58df1d9b3e59.png%22%2C%22taskId%22%3A%22u97f3c2d9-6ca8-4ae4-a49e-7c71f0bcc00%22%2C%22clientId%22%3A%22u73a045bd-9c50-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A605%2C%22height%22%3A297%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A720275%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A605%2C%22originHeight%22%3A297%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%E5%BA%8F%E6%89%BE%E5%87%BA%E8%BF%99%E4%B8%A4%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.%E8%A6%81%E6%B1%82%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AFO(N)%2C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%22%2C%22x%22%3A267%2C%22y%22%3A107%2C%22width%22%3A303%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%226%E4%B8%89%E4%B8%AA%E5%81%8F%E7%A8%8B%E7%9B%9F%3ASTRS%2C%E6%8E%A8%E6%8E%92%2C%E5%AE%9E%E7%8E%B0HASH%E7%9A%84%E6%8F%92%E5%85%A5%2C%E6%9F%A5%E8%AF%A2%2C%22%2C%22x%22%3A8%2C%22y%22%3A148%2C%22width%22%3A217%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E6%A0%A1%E5%9B%AD%E6%8B%9B%E8%81%98%E7%9A%84%E5%9C%A8%E7%AC%94%E8%AF%95%E7%AE%97%E6%B3%95%E9%A2%98%E5%92%8C%E9%9D%A2%E8%AF%95%E4%B8%AD%E9%83%BD%E4%BC%9A%E8%80%83%E5%AF%9F%E5%AF%B9%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E8%AE%A1%E7%AE%97%22%2C%22x%22%3A260%2C%22y%22%3A146%2C%22width%22%3A317%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E4%B8%80%E4%B8%AA%E6%95%B4%E5%9E%8B%E6%95%B0%E7%BB%84%E9%87%8C%E9%99%A4%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E5%A4%96%2C%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E9%83%BD%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%A4%E6%AC%A1.%E8%AF%B7%E5%86%99%E7%A8%8B%22%2C%22x%22%3A267%2C%22y%22%3A93%2C%22width%22%3A312%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%2212.ST8LIC%E5%85%B3%E5%AD%97%E4%BD%9C%E7%94%A8%2C%E4%BF%AE%E9%A5%B0%E5%87%BD%E6%95%B0%E6%97%B6%E4%BD%9C%E7%94%A8%22%2C%22x%22%3A7%2C%22y%22%3A239%2C%22width%22%3A143%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%2213.GU%E6%AD%A4%E6%98%AF%E4%BB%80%E4%B9%88%3F%E8%BF%99%E4%B8%AA%E5%90%AC%E9%83%BD%E8%AE%BE%E5%90%AC%E8%AF%B4%E8%BF%87%22%2C%22x%22%3A8%2C%22y%22%3A254%2C%22width%22%3A137%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22.%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8C%BA%E5%88%AB%2C%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%2C%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%2C%E7%AE%A1%E9%81%93%22%2C%22x%22%3A10%2C%22y%22%3A133%2C%22width%22%3A191%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%2214.%E8%AE%A9%E6%88%91%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B9%B0%E7%A5%A8%E7%B3%BB%E7%BB%9F%2C%E4%B8%8D%E7%9F%A5%E9%81%93%E8%AE%BE%E8%AE%A1%2CGAEOER%22%2C%22x%22%3A8%2C%22y%22%3A269%2C%22width%22%3A206%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%222.%E7%BA%A2%E9%BB%91%E6%A0%91%E4%BA%86%E8%A7%A3%E5%90%97%2C%E7%BA%A2%E9%BB%91%E7%9A%84%E7%8C%9B%E5%85%A5.%E5%88%A0%E9%99%A4(%E7%9B%B4%E6%8E%A5%E6%95%85%E5%BC%83)%22%2C%22x%22%3A7%2C%22y%22%3A88%2C%22width%22%3A189%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E5%BF%AB%E6%8E%92%E5%A2%9E%E6%8E%92%E5%BD%92%E5%B9%B6%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%2C%E5%BF%AB%E6%8C%81%E6%9C%80%E5%9D%8F%E7%9A%84%E6%83%85%E5%86%B5%2C%E6%80%8E%E4%B9%88%E6%8E%A8%E5%AF%BC%E7%9A%84%22%2C%22x%22%3A13%2C%22y%22%3A118%2C%22width%22%3A215%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E8%85%BE%E8%AE%AFC%2B%2B%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E5%87%89%E7%BB%8F%22%2C%22x%22%3A32%2C%22y%22%3A7%2C%22width%22%3A138%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22%5B%E4%B8%80%E9%9D%A2%5D2%E5%B0%8F%E6%97%B6%22%2C%22x%22%3A11%2C%22y%22%3A49%2C%22width%22%3A96%2C%22height%22%3A16%7D%2C%7B%22text%22%3A%229AE%E5%88%B0%E5%88%A9%E9%99%A4%E4%BC%9A%E8%BF%94%E5%9B%BD%E4%BB%80%E4%B9%88%22%2C%22x%22%3A6%2C%22y%22%3A194%2C%22width%22%3A89%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%2215TCP%E4%BA%8C%E6%AC%A1%E6%B0%91%E6%89%8B%2C%E6%BB%91%E5%8A%A8%E7%A1%AE%E5%8F%A3%2C%E6%88%91%E7%BB%99%E5%86%8D%E4%BA%86%E5%9B%BE%2C%E8%AE%A9%E4%B8%8A%E6%88%91%E5%88%AB%E5%86%8D%E4%BA%86%22%2C%22x%22%3A9%2C%22y%22%3A283%2C%22width%22%3A220%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E6%BB%A9%E5%BA%A6%E4%B8%AD%E7%AD%89%E5%BF%83361%E8%BF%870%E5%8F%A3%22%2C%22x%22%3A267%2C%22y%22%3A58%2C%22width%22%3A240%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%E5%89%91%E6%8C%87OFFER56.L.%E6%95%B0%E7%BB%84%E4%B8%AD%E6%95%B0%E5%AD%97%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0%22%2C%22x%22%3A270%2C%22y%22%3A39%2C%22width%22%3A184%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%227.SOLOCT%2COPOL%E4%BA%86G%22%2C%22x%22%3A8%2C%22y%22%3A164%2C%22width%22%3A86%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%2211.EX1ER9NC%E4%BD%9C%E6%98%A8%E7%94%A8%22%2C%22x%22%3A8%2C%22y%22%3A224%2C%22width%22%3A82%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22HASH%E5%86%B2%E7%AA%81%E5%91%98%E4%BB%80%E4%B9%88%2C%E5%A6%82%E6%9E%9C%E5%8D%95%E9%93%BE%E9%95%BF%E5%BA%A6%E5%A4%AA%E9%95%BF%E6%80%8E%E4%B9%88%E5%8A%9E%22%2C%22x%22%3A9%2C%22y%22%3A104%2C%22width%22%3A181%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%228.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BA%86%E5%90%97%22%2C%22x%22%3A7%2C%22y%22%3A178%2C%22width%22%3A70%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%85%A5%3ANUMS%5B4%2C1%2C4%2C6%5D%22%2C%22x%22%3A276%2C%22y%22%3A194%2C%22width%22%3A119%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%2CCONST%E4%BD%9C%E7%94%A8%2CCON8%E5%AE%89%E9%87%8F%E4%B8%80%E5%AE%9A%E4%B8%8D%E6%A5%BC%E6%94%B9%E9%AA%97%22%2C%22x%22%3A17%2C%22y%22%3A209%2C%22width%22%3A135%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%87%BA%3A%5B1%2C6%5D%E6%88%96%5B6%2C1%5D%22%2C%22x%22%3A277%2C%22y%22%3A209%2C%22width%22%3A114%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%221.VECTOR%E6%89%A9%E5%B9%BF%E5%AE%A2%E6%9C%BAU%E5%88%B6%22%2C%22x%22%3A8%2C%22y%22%3A73%2C%22width%22%3A69%2C%22height%22%3A9%7D%2C%7B%22text%22%3A%22O(1).%22%2C%22x%22%3A264%2C%22y%22%3A118%2C%22width%22%3A38%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%22%E7%A4%BA%E4%BE%8B1%3A%22%2C%22x%22%3A268%2C%22y%22%3A164%2C%22width%22%3A43%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%222%E5%A4%A9%E7%9A%84%E6%9E%9C%22%2C%22x%22%3A38%2C%22y%22%3A26%2C%22width%22%3A48%2C%22height%22%3A6%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23e7e9e6%22%2C%22id%22%3A%22udb76250c%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="ySa09" id="ySa09"><span data-lake-id="u81402897" id="u81402897">2.时间复杂度</span></h2><h3 data-lake-id="Arszu" id="Arszu" collapsed="true"><span data-lake-id="u0fb5a1b6" id="u0fb5a1b6">2.1时间复杂度的概念</span></h3><p data-lake-id="ud76332c9" id="ud76332c9"><strong><span data-lake-id="u8275aff6" id="u8275aff6" style="color: #1DC0C9">时间复杂度不计算时间，计算大概的运算次数</span></strong></p><p data-lake-id="udf3c8371" id="udf3c8371"><strong><span data-lake-id="u3da60a3b" id="u3da60a3b" style="color: #1DC0C9">空间复杂度不计算空间，计算大概定义的变量个数</span></strong></p><p data-lake-id="u0c4898ec" id="u0c4898ec"><span data-lake-id="ud271e7a5" id="ud271e7a5" class="lake-fontsize-12" style="color: rgb(119,119,119)">时间复杂度的定义：在计算机科学中，</span><strong><span data-lake-id="uea86a9b8" id="uea86a9b8" class="lake-fontsize-12" style="color: rgb(119,119,119)">算法的时间复杂度是一个函数</span></strong><span data-lake-id="u2dbaf52e" id="u2dbaf52e" class="lake-fontsize-12" style="color: rgb(119,119,119)">，它定量描述了该算法的运行时间。一个算法执行所耗费的时间，从理论上说，是不能算出来的，只有你把你的程序放在机器上跑起来，才能知道。但是我们需要每个算法都上机测试吗？是可以都上机测试，但是这很麻烦，所以才有了时间复杂度这个分析方式。一个算法所花费的时间与其中语句的执行次数成正比例，</span><strong><span data-lake-id="u30b1a4dc" id="u30b1a4dc" class="lake-fontsize-12" style="color: rgb(119,119,119)">算法中的基本操作的执行次数，为算法的时间复杂度。</span></strong></p><p data-lake-id="u20e0497a" id="u20e0497a"><span data-lake-id="u5a0aad64" id="u5a0aad64" class="lake-fontsize-12" style="color: rgb(119,119,119)">即：找到某条基本语句与问题规模N之间的数学表达式，就是算出了该算法的时间复杂度。</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AF%B7%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%8BFunc1%E4%B8%AD%2B%2Bcount%E8%AF%AD%E5%8F%A5%E6%80%BB%E5%85%B1%E6%89%A7%E8%A1%8C%E4%BA%86%E5%A4%9A%E5%B0%91%E6%AC%A1%EF%BC%9F%5Cnvoid%20Func1(int%20N)%5Cn%7B%5Cn%5Ctint%20count%20%3D%200%3B%5Cn%5Ctfor%20(int%20i%20%3D%200%3B%20i%20%3C%20N%3B%20%2B%2Bi)%5Cn%5Ct%7B%5Cn%5Ct%5Ctfor%20(int%20j%20%3D%200%3B%20j%20%3C%20N%3B%20%2B%2Bj)%5Cn%5Ct%5Ct%7B%5Cn%5Ct%5Ct%5Ct%2B%2Bcount%3B%5Cn%5Ct%5Ct%7D%5Cn%5Ct%7D%5Cn%5Cn%5Ctfor%20(int%20k%20%3D%200%3B%20k%20%3C%202%20*%20N%3B%20%2B%2Bk)%5Cn%5Ct%7B%5Cn%5Ct%5Ct%2B%2Bcount%3B%5Cn%5Ct%7D%5Cn%5Ctint%20M%20%3D%2010%3B%5Cn%5Ctwhile%20(M--)%5Cn%5Ct%7B%5Cn%5Ct%5Ct%2B%2Bcount%3B%5Cn%5Ct%7D%5Cn%5Ctprintf(%5C%22%25d%5C%5Cn%5C%22%2C%20count)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Nwmxr%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u0245305f" id="u0245305f" style="text-align: left"><strong><span data-lake-id="u466d0557" id="u466d0557" class="lake-fontsize-12" style="color: rgb(119,119,119)">Func1 执行的基本操作次数：</span></strong></p><p data-lake-id="u5acaeffb" id="u5acaeffb" style="text-align: left; text-indent: 2em; padding-left: 14em"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748358064878-515aafb7-4da9-415b-aebe-6c349d2fae1a.png%22%2C%22taskId%22%3A%22u6ee3262c-f6ec-4423-97a8-d932ea9be79%22%2C%22clientId%22%3A%22u73a045bd-9c50-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A158%2C%22height%22%3A17%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A10862%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A158%2C%22originHeight%22%3A17%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%E5%8D%81%22%2C%22x%22%3A48%2C%22y%22%3A2%2C%22width%22%3A77%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%22%E4%B8%89%22%2C%22x%22%3A0%2C%22y%22%3A1%2C%22width%22%3A46%2C%22height%22%3A15%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%232b2b2b%22%2C%22id%22%3A%22u5607bfbf%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><ul list="u0cc95125"><li fid="u57c52218" data-lake-id="ubef05bcf" id="ubef05bcf" style="text-align: left"><span data-lake-id="u1976d965" id="u1976d965" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 10		F(N) = 130</span></li><li fid="u57c52218" data-lake-id="u58c94762" id="u58c94762" style="text-align: left"><span data-lake-id="u5adf17de" id="u5adf17de" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 100		F(N) = 10210</span></li><li fid="u57c52218" data-lake-id="u9da1bbf6" id="u9da1bbf6" style="text-align: left"><span data-lake-id="ub1b9dfee" id="ub1b9dfee" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 1000		F(N) = 1002010</span></li></ul><p data-lake-id="u489b9070" id="u489b9070"><span data-lake-id="uad2893a6" id="uad2893a6" class="lake-fontsize-12" style="color: rgb(119,119,119)">实际中我们计算时间复杂度时，我们其实并不一定要计算精确的执行次数，而只需要</span><strong><span data-lake-id="u0f217831" id="u0f217831" class="lake-fontsize-12" style="color: rgb(119,119,119)">大概执行次数，那么这里我们使用大</span></strong><span data-lake-id="ueb9d550e" id="ueb9d550e" class="lake-fontsize-12" style="color: rgb(119,119,119)">O</span><strong><span data-lake-id="u3b88eb9f" id="u3b88eb9f" class="lake-fontsize-12" style="color: rgb(119,119,119)">的渐进表示法。</span></strong></p><h3 data-lake-id="yiFCE" id="yiFCE" collapsed="true"><span data-lake-id="u2b804597" id="u2b804597" style="color: #262626">2.2 大O的渐进表示法</span></h3><p data-lake-id="u1b6905b2" id="u1b6905b2"><strong><span data-lake-id="u8cfcc390" id="u8cfcc390" class="lake-fontsize-12" style="color: rgb(119,119,119)">大</span></strong><span data-lake-id="ud2b1b8fa" id="ud2b1b8fa" class="lake-fontsize-12" style="color: rgb(119,119,119)">O</span><strong><span data-lake-id="u46a05018" id="u46a05018" class="lake-fontsize-12" style="color: rgb(119,119,119)">符号（</span></strong><span data-lake-id="u290b91d3" id="u290b91d3" class="lake-fontsize-12" style="color: rgb(119,119,119)">Big O notation</span><strong><span data-lake-id="u752f3367" id="u752f3367" class="lake-fontsize-12" style="color: rgb(119,119,119)">）：是用于描述函数渐进行为的数学符号。</span></strong></p><p data-lake-id="uaea91be6" id="uaea91be6"><strong><span data-lake-id="uf89a8a44" id="uf89a8a44" class="lake-fontsize-12" style="color: rgb(119,119,119)">推导大</span></strong><span data-lake-id="u3d0c36ec" id="u3d0c36ec" class="lake-fontsize-12" style="color: rgb(119,119,119)">O</span><strong><span data-lake-id="ufbcfc3a0" id="ufbcfc3a0" class="lake-fontsize-12" style="color: rgb(119,119,119)">阶方法：</span></strong></p><p data-lake-id="u6bd3a03d" id="u6bd3a03d" style="text-align: left"><span data-lake-id="u405b9633" id="u405b9633" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><span data-lake-id="ucf66c86d" id="ucf66c86d" class="lake-fontsize-12" style="color: rgb(119,119,119)">、用常数</span><span data-lake-id="ufe34044c" id="ufe34044c" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><span data-lake-id="uf18e06e6" id="uf18e06e6" class="lake-fontsize-12" style="color: rgb(119,119,119)">取代运行时间中的所有加法常数。</span></p><p data-lake-id="uda6b8078" id="uda6b8078" style="text-align: left"><strong><span data-lake-id="u91ec27bc" id="u91ec27bc" class="lake-fontsize-12" style="color: #262626">2、在修改后的运行次数函数中，只保留最高阶项。</span></strong></p><p data-lake-id="uf57eb698" id="uf57eb698" style="text-align: left"><span data-lake-id="u2ecf8a07" id="u2ecf8a07" class="lake-fontsize-12" style="color: rgb(119,119,119)">3、如果最高阶项存在且不是1，则去除与这个项目相乘的常数。得到的结果就是大O阶。使用大O的渐进表示法以后，Func1的时间复杂度为：</span></p><p data-lake-id="u181d83e3" id="u181d83e3" style="text-align: left; text-indent: 2em; padding-left: 16em"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748358185823-e59d369a-774d-412a-9dd5-cc96333b7a36.png%22%2C%22taskId%22%3A%22u3acff8d1-00cf-492a-a0ec-e55666ad299%22%2C%22clientId%22%3A%22u73a045bd-9c50-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A41%2C%22height%22%3A17%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A2894%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A41%2C%22originHeight%22%3A17%2C%22ratio%22%3A1%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%233c3c3c%22%2C%22id%22%3A%22u47cfce1a%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><ul list="u634c1964"><li fid="u91c6cd62" data-lake-id="u10643444" id="u10643444" style="text-align: left"><span data-lake-id="ub5b0ec19" id="ub5b0ec19" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 10		F(N) = 100</span></li><li fid="u91c6cd62" data-lake-id="u8d757f09" id="u8d757f09" style="text-align: left"><span data-lake-id="u2acf840a" id="u2acf840a" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 100 		F(N) = 10000</span></li><li fid="u91c6cd62" data-lake-id="uf388451a" id="uf388451a" style="text-align: left"><span data-lake-id="u4cb8cefd" id="u4cb8cefd" class="lake-fontsize-12" style="color: rgb(119,119,119)">N = 1000 	F(N) = 1000000</span></li></ul><p data-lake-id="u8bfef5d7" id="u8bfef5d7"><span data-lake-id="uf7ba14a4" id="uf7ba14a4" class="lake-fontsize-12" style="color: rgb(119,119,119)">通过上面我们会发现大</span><span data-lake-id="u6eacc9c4" id="u6eacc9c4" class="lake-fontsize-12" style="color: rgb(119,119,119)">O</span><span data-lake-id="u6bcf34b9" id="u6bcf34b9" class="lake-fontsize-12" style="color: rgb(119,119,119)">的渐进表示法</span><strong><span data-lake-id="ua7331a70" id="ua7331a70" class="lake-fontsize-12" style="color: rgb(119,119,119)">去掉了那些对结果影响不大的项</span></strong><span data-lake-id="u4d8481b4" id="u4d8481b4" class="lake-fontsize-12" style="color: rgb(119,119,119)">，简洁明了的表示出了执行次数。 </span></p><p data-lake-id="u8a363830" id="u8a363830"><span data-lake-id="ua3f75c7f" id="ua3f75c7f" class="lake-fontsize-12" style="color: rgb(119,119,119)">另外有些算法的时间复杂度存在最好、平均和最坏情况： </span></p><p data-lake-id="u392cc63e" id="u392cc63e"><span data-lake-id="u9f88153d" id="u9f88153d" class="lake-fontsize-12" style="color: rgb(119,119,119)">最坏情况：任意输入规模的最大运行次数</span><span data-lake-id="u09b48806" id="u09b48806" class="lake-fontsize-12" style="color: rgb(119,119,119)">(</span><span data-lake-id="ud5b1c16f" id="ud5b1c16f" class="lake-fontsize-12" style="color: rgb(119,119,119)">上界</span><span data-lake-id="u65d4ee5d" id="u65d4ee5d" class="lake-fontsize-12" style="color: rgb(119,119,119)">) </span></p><p data-lake-id="ue5cfb7dc" id="ue5cfb7dc"><span data-lake-id="ue382366a" id="ue382366a" class="lake-fontsize-12" style="color: rgb(119,119,119)">平均情况：任意输入规模的期望运行次数 </span></p><p data-lake-id="ub5c979a4" id="ub5c979a4"><span data-lake-id="u4a149641" id="u4a149641" class="lake-fontsize-12" style="color: rgb(119,119,119)">最好情况：任意输入规模的最小运行次数</span><span data-lake-id="u6cf48f7e" id="u6cf48f7e" class="lake-fontsize-12" style="color: rgb(119,119,119)">(</span><span data-lake-id="u1b3f403b" id="u1b3f403b" class="lake-fontsize-12" style="color: rgb(119,119,119)">下界</span><span data-lake-id="ucf28c47e" id="ucf28c47e" class="lake-fontsize-12" style="color: rgb(119,119,119)">) </span></p><p data-lake-id="u97e43e1f" id="u97e43e1f"><span data-lake-id="ud699dd2f" id="ud699dd2f" class="lake-fontsize-12" style="color: rgb(119,119,119)">例如：在一个长度为</span><span data-lake-id="u451a9897" id="u451a9897" class="lake-fontsize-12" style="color: rgb(119,119,119)">N</span><span data-lake-id="u0252e082" id="u0252e082" class="lake-fontsize-12" style="color: rgb(119,119,119)">数组中搜索一个数据</span><span data-lake-id="u8e3ad840" id="u8e3ad840" class="lake-fontsize-12" style="color: rgb(119,119,119)">x </span></p><p data-lake-id="u0e6d8366" id="u0e6d8366"><span data-lake-id="u22372b72" id="u22372b72" class="lake-fontsize-12" style="color: rgb(119,119,119)">最好情况：</span><span data-lake-id="u9b9bfe19" id="u9b9bfe19" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><span data-lake-id="u195924d5" id="u195924d5" class="lake-fontsize-12" style="color: rgb(119,119,119)">次找到 </span></p><p data-lake-id="u99d0692e" id="u99d0692e"><span data-lake-id="u1d841c80" id="u1d841c80" class="lake-fontsize-12" style="color: rgb(119,119,119)">最坏情况：</span><span data-lake-id="u30fe561e" id="u30fe561e" class="lake-fontsize-12" style="color: rgb(119,119,119)">N</span><span data-lake-id="ufa5d3f27" id="ufa5d3f27" class="lake-fontsize-12" style="color: rgb(119,119,119)">次找到 </span></p><p data-lake-id="u01538b09" id="u01538b09"><span data-lake-id="u4add2329" id="u4add2329" class="lake-fontsize-12" style="color: rgb(119,119,119)">平均情况：N/2次找到</span></p><p data-lake-id="u7399c3b2" id="u7399c3b2"><strong><span data-lake-id="u27b3993e" id="u27b3993e" class="lake-fontsize-12" style="color: #DF2A3F">在实际中一般情况关注的是算法的最坏运行情况，所以数组中搜索数据时间复杂度为O(N)</span></strong></p><h3 data-lake-id="K8qVl" id="K8qVl"><span data-lake-id="ua284c1cc" id="ua284c1cc" style="color: #262626">2.3常见时间复杂度计算举例</span></h3><p data-lake-id="udece2e19" id="udece2e19"><strong><span data-lake-id="ud32c8feb" id="ud32c8feb" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例1： ---O(N)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97Func2%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnvoid%20Func2(int%20N)%5Cn%7B%5Cn%20int%20count%20%3D%200%3B%5Cn%20for%20(int%20k%20%3D%200%3B%20k%20%3C%202%20*%20N%20%3B%20%2B%2B%20k)%5Cn%20%7B%5Cn%20%2B%2Bcount%3B%5Cn%20%7D%5Cn%20int%20M%20%3D%2010%3B%5Cn%20while%20(M--)%5Cn%20%7B%5Cn%20%2B%2Bcount%3B%5Cn%20%7D%5Cn%20printf(%5C%22%25d%5C%5Cn%5C%22%2C%20count)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ym34R%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7a71dd0c" id="u7a71dd0c"><span data-lake-id="uda4a9d85" id="uda4a9d85" class="lake-fontsize-12">实例2： ---O(N+M)</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97Func3%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnvoid%20Func3(int%20N%2C%20int%20M)%5Cn%7B%5Cn%20int%20count%20%3D%200%3B%5Cn%20for%20(int%20k%20%3D%200%3B%20k%20%3C%20M%3B%20%2B%2B%20k)%5Cn%20%7B%5Cn%20%2B%2Bcount%3B%5Cn%20%7D%5Cn%20for%20(int%20k%20%3D%200%3B%20k%20%3C%20N%20%3B%20%2B%2B%20k)%5Cn%20%7B%5Cn%20%2B%2Bcount%3B%5Cn%20%7D%5Cn%20printf(%5C%22%25d%5C%5Cn%5C%22%2C%20count)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22c5KL3%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u97538fe8" id="u97538fe8"><span data-lake-id="ubf51635f" id="ubf51635f" class="lake-fontsize-12">实例3： ---O(1)</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97Func4%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnvoid%20Func4(int%20N)%5Cn%7B%5Cn%20int%20count%20%3D%200%3B%5Cn%20for%20(int%20k%20%3D%200%3B%20k%20%3C%20100%3B%20%2B%2B%20k)%5Cn%20%7B%5Cn%20%2B%2Bcount%3B%5Cn%20%7D%5Cn%20printf(%5C%22%25d%5C%5Cn%5C%22%2C%20count)%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22J2o11%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u10c9c8c0" id="u10c9c8c0"><span data-lake-id="ube095306" id="ube095306" class="lake-fontsize-12">实例4： ---</span><strong><span data-lake-id="u72240200" id="u72240200" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97strchr%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F--strchr%E6%89%BE%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0%5Cnconst%20char%20*%20strchr%20(%20const%20char%20*%20str%2C%20int%20character%20)%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22dYfUX%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u60682051" id="u60682051"><span data-lake-id="u53c01da7" id="u53c01da7" class="lake-fontsize-12">实例5：---</span><strong><span data-lake-id="u05b42bcc" id="u05b42bcc" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N^2)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97BubbleSort%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnvoid%20BubbleSort(int*%20a%2C%20int%20n)%5Cn%7B%5Cn%20assert(a)%3B%5Cn%20for%20(size_t%20end%20%3D%20n%3B%20end%20%3E%200%3B%20--end)%5Cn%20%7B%5Cn%20int%20exchange%20%3D%200%3B%5Cn%20for%20(size_t%20i%20%3D%201%3B%20i%20%3C%20end%3B%20%2B%2Bi)%5Cn%20%7B%5Cn%20if%20(a%5Bi-1%5D%20%3E%20a%5Bi%5D)%5Cn%20%7B%5Cn%20Swap(%26a%5Bi-1%5D%2C%20%26a%5Bi%5D)%3B%5Cn%20exchange%20%3D%201%3B%5Cn%20%7D%5Cn%20%7D%5Cn%20if%20(exchange%20%3D%3D%200)%5Cn%20break%3B%5Cn%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22lpwRx%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u9cc38e04" id="u9cc38e04"><span data-lake-id="ue07c9155" id="ue07c9155" class="lake-fontsize-12">实例6： ---</span><strong><span data-lake-id="ubdca5797" id="ubdca5797" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(logN)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E6%B3%95%5Cn%2F%2F%20%E8%AE%A1%E7%AE%97BinarySearch%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnint%20BinarySearch(int*%20a%2C%20int%20n%2C%20int%20x)%5Cn%7B%5Cn%20assert(a)%3B%5Cn%20int%20begin%20%3D%200%3B%5Cn%20int%20end%20%3D%20n-1%3B%5Cn%20%2F%2F%20%5Bbegin%2C%20end%5D%EF%BC%9Abegin%E5%92%8Cend%E6%98%AF%E5%B7%A6%E9%97%AD%E5%8F%B3%E9%97%AD%E5%8C%BA%E9%97%B4%EF%BC%8C%E5%9B%A0%E6%AD%A4%E6%9C%89%3D%E5%8F%B7%5Cn%20while%20(begin%20%3C%3D%20end)%5Cn%20%7B%5Cn%20int%20mid%20%3D%20begin%20%2B%20((end-begin)%3E%3E1)%3B%5Cn%20if%20(a%5Bmid%5D%20%3C%20x)%5Cn%20begin%20%3D%20mid%2B1%3B%5Cn%20else%20if%20(a%5Bmid%5D%20%3E%20x)%5Cn%20end%20%3D%20mid-1%3B%5Cn%20else%5Cn%20return%20mid%3B%5Cn%20%7D%5Cn%20return%20-1%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22JXJZy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><details data-lake-id="ufdf1b4df" id="ufdf1b4df" open="false" class="lake-collapse"><summary data-lake-id="ud281b861" id="ud281b861" class="lake-summary"><span data-lake-id="u6a802fe7" id="u6a802fe7" class="lake-fontsize-12">解释</span></summary><p data-lake-id="uae143dc4" id="uae143dc4"><span data-lake-id="uf4c6ba65" id="uf4c6ba65">我们最多查几次？<br /></span><span data-lake-id="uff7d0cfd" id="uff7d0cfd">让：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22n%20%2F%202%5Ek%20%3D%201%20%20%20%E2%86%92%20%20%202%5Ek%20%3D%20n%20%20%20%E2%86%92%20%20%20k%20%3D%20log%E2%82%82(n)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22TC33r%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u1906936c" id="u1906936c"><span data-lake-id="u67a0f82c" id="u67a0f82c">所以最多执行 </span><code data-lake-id="uab17927f" id="uab17927f"><span data-lake-id="ud7b4d833" id="ud7b4d833">log₂(n)</span></code><span data-lake-id="u9bb8f659" id="u9bb8f659"> 次循环。</span></p><p data-lake-id="uc754b9d0" id="uc754b9d0"><span data-lake-id="u0f03e7ec" id="u0f03e7ec">​</span><br></p><p data-lake-id="uee6c1040" id="uee6c1040"><span data-lake-id="u669d8386" id="u669d8386">时间复杂度 = O(log n)</span></p><p data-lake-id="ufa3230b9" id="ufa3230b9"><span data-lake-id="u07a00770" id="u07a00770">因为每次都砍掉一半，最多执行 log₂(n) 次循环。</span></p><p data-lake-id="ue637c56d" id="ue637c56d"><span data-lake-id="ue412d2ce" id="ue412d2ce">​</span><br></p><h3 data-lake-id="3b734619" id="3b734619"><span data-lake-id="ub4daaae8" id="ub4daaae8">✅</span><span data-lake-id="uad2dc242" id="uad2dc242"> 举个例子你就懂了：</span></h3><ul list="u5809b98e"><li fid="u347956f2" data-lake-id="u823bf955" id="u823bf955"><code data-lake-id="u9a21bb62" id="u9a21bb62"><span data-lake-id="u761fcfc5" id="u761fcfc5">log₂(n)</span></code><span data-lake-id="u0ea61c6b" id="u0ea61c6b"> ≈ </span><code data-lake-id="u92c575e3" id="u92c575e3"><span data-lake-id="uc5b7b880" id="uc5b7b880">log₁₀(n) × 3.32</span></code></li><li fid="u347956f2" data-lake-id="u375a920a" id="u375a920a"><code data-lake-id="u1a00f772" id="u1a00f772"><span data-lake-id="ue0895e48" id="ue0895e48">log₁₀(n)</span></code><span data-lake-id="u0c3db43b" id="u0c3db43b"> ≈ </span><code data-lake-id="u903720de" id="u903720de"><span data-lake-id="u09b2727d" id="u09b2727d">log₂(n) / 3.32</span></code></li></ul><p data-lake-id="u09c233e9" id="u09c233e9"><span data-lake-id="u27dccd5c" id="u27dccd5c">底数变了，值变了，但</span><strong><span data-lake-id="ud0d7d2e4" id="ud0d7d2e4">只是差了一个常数倍（3.32 倍）</span></strong><span data-lake-id="u0dadfc4e" id="u0dadfc4e">。</span></p><h3 data-lake-id="ba2fb1d1" id="ba2fb1d1"><span data-lake-id="uaa1caaed" id="uaa1caaed">而时间复杂度 O() 的定义里是这样的：</span></h3><p data-lake-id="u89fa0c5b" id="u89fa0c5b"><span data-lake-id="ue56e64bb" id="ue56e64bb">如果算法的运行时间是 </span><code data-lake-id="u0e1886da" id="u0e1886da"><span data-lake-id="u014af46b" id="u014af46b">C × log₂(n)</span></code><span data-lake-id="uda9fff37" id="uda9fff37">，只要 </span><code data-lake-id="ua2ee674a" id="ua2ee674a"><span data-lake-id="u9b0d6374" id="u9b0d6374">C</span></code><span data-lake-id="ufc779487" id="ufc779487"> 是常数，就可以简写为 </span><code data-lake-id="uf2056618" id="uf2056618"><span data-lake-id="u348ab474" id="u348ab474">O(log n)</span></code><span data-lake-id="u606de78b" id="u606de78b">。</span></p></details><p data-lake-id="u9d600cad" id="u9d600cad"><span data-lake-id="u5bc7f85b" id="u5bc7f85b" class="lake-fontsize-12">实例7： ---</span><strong><span data-lake-id="u8946dc81" id="u8946dc81" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98%E9%80%92%E5%BD%92Fac%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnlong%20long%20Fac(size_t%20N)%5Cn%7B%5Cn%20if(0%20%3D%3D%20N)%5Cn%20return%201%3B%5Cn%20%5Cn%20return%20Fac(N-1)*N%3B%5Cn%7D%5Cn%5Cn%5Cn%2F%2F%E8%A7%86%E9%A2%91%E5%AE%9E%E4%BE%8B%EF%BC%9A%5Cnlong%20long%20Factorial(size_t%20N)%5Cn%7B%5Cn%20%20%20%20return%20N%20%3C%202%20%3F%20N%20%3A%20Factorial(N-1)*N%3B%5Cn%7D%5Cn%5Cn%5Cn%2F%2F%E9%80%92%E5%BD%92%E7%AE%97%E6%B3%95%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95%EF%BC%9A%E9%80%92%E5%BD%92%E6%AC%A1%E6%95%B0*%E6%AF%8F%E6%AC%A1%E9%80%92%E5%BD%92%E5%87%BD%E6%95%B0%E7%9A%84%E6%AC%A1%E6%95%B0%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22f9g0e%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><details data-lake-id="u5f64f967" id="u5f64f967" open="false" class="lake-collapse"><summary data-lake-id="udd891f68" id="udd891f68" class="lake-summary"><span data-lake-id="u48d45951" id="u48d45951" class="lake-fontsize-12">解释</span></summary><h2 data-lake-id="536d9901" id="536d9901"><span data-lake-id="u47207812" id="u47207812">🧮</span><span data-lake-id="u127df954" id="u127df954"> 三、怎么计算时间复杂度？</span></h2><p data-lake-id="u4deb6b59" id="u4deb6b59"><span data-lake-id="u9eb53c72" id="u9eb53c72">递归的时间复杂度 = </span><strong><span data-lake-id="u158aef50" id="u158aef50">递归调用的次数 × 每次调用的操作量</span></strong></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22BbXr3%22%7D"></card><h3 data-lake-id="f605c7b7" id="f605c7b7"><span data-lake-id="u85ab4b6a" id="u85ab4b6a">✅</span><span data-lake-id="u21412afb" id="u21412afb"> 1. 递归次数是多少？</span></h3><ul list="u638103f3"><li fid="u395c604b" data-lake-id="u40357454" id="u40357454"><span data-lake-id="u78b5bf9c" id="u78b5bf9c">从 </span><code data-lake-id="u231b112a" id="u231b112a"><span data-lake-id="uf9463c23" id="uf9463c23">N</span></code><span data-lake-id="ue2d8eeda" id="ue2d8eeda"> 一直递减到 0，共调用 </span><code data-lake-id="u63968a3a" id="u63968a3a"><span data-lake-id="uf5b48c32" id="uf5b48c32">N+1</span></code><span data-lake-id="u7c414fbc" id="u7c414fbc"> 次。</span></li><li fid="u395c604b" data-lake-id="ud9de2a0f" id="ud9de2a0f"><span data-lake-id="u0250803c" id="u0250803c">所以</span><strong><span data-lake-id="ub748c400" id="ub748c400">递归次数是 O(N)</span></strong><span data-lake-id="u983a9a3c" id="u983a9a3c">。</span></li></ul><card type="block" name="hr" value="data:%7B%22id%22%3A%22N824N%22%7D"></card><h3 data-lake-id="36bb1161" id="36bb1161"><span data-lake-id="u324a8c4d" id="u324a8c4d">✅</span><span data-lake-id="uc148f902" id="uc148f902"> 2. 每次调用耗时多少？</span></h3><p data-lake-id="u5f3fc4e3" id="u5f3fc4e3"><span data-lake-id="u3c918dd3" id="u3c918dd3">看这一句：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22return%20Fac(N-1)%20*%20N%3B%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22K4UUV%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u3aa37e3a" id="u3aa37e3a"><span data-lake-id="u3b57a0df" id="u3b57a0df">除了递归调用本身，还做了一次</span><strong><span data-lake-id="ue22bdce7" id="ue22bdce7">乘法操作</span></strong><span data-lake-id="ubf29f719" id="ubf29f719">（</span><code data-lake-id="u7e4b204a" id="u7e4b204a"><span data-lake-id="u1a097e9e" id="u1a097e9e">*N</span></code><span data-lake-id="uba507873" id="uba507873">）。这就是一个</span><strong><span data-lake-id="u8ab14ea0" id="u8ab14ea0">常数时间操作 O(1)</span></strong><span data-lake-id="u9e92f19a" id="u9e92f19a">。</span></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22CASr9%22%7D"></card><h2 data-lake-id="45e22c27" id="45e22c27"><span data-lake-id="u554c2aa7" id="u554c2aa7">✅</span><span data-lake-id="u9f78ae27" id="u9f78ae27"> 四、最终时间复杂度是多少？</span></h2><p data-lake-id="ude90ddd7" id="ude90ddd7"><span data-lake-id="u55006fe5" id="u55006fe5">每次递归执行时间是 </span><strong><span data-lake-id="u23a1a2d5" id="u23a1a2d5">O(1)</span></strong><span data-lake-id="u6bef72e8" id="u6bef72e8">，递归调用次数是 </span><strong><span data-lake-id="u0dd54c4e" id="u0dd54c4e">O(N)</span></strong><span data-lake-id="u866948f3" id="u866948f3">，所以总时间复杂度是：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22O(N)%20%C3%97%20O(1)%20%3D%20O(N)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22g3V8I%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></details><p data-lake-id="u2067106a" id="u2067106a"><span data-lake-id="u2df5e073" id="u2df5e073" class="lake-fontsize-12">实例8： ---</span><strong><span data-lake-id="u0c4d8d99" id="u0c4d8d99" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(2^N)</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E9%80%92%E5%BD%92Fib%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnlong%20long%20Fib(size_t%20N)%5Cn%7B%5Cn%20%20%20%20%20if(N%20%3C%203)%5Cn%20%20%20%20%20return%201%3B%5Cn%20%20%20%20%20%5Cn%20%20%20%20%20return%20Fib(N-1)%20%2B%20Fib(N-2)%3B%5Cn%7D%5Cn%5Cn%5Cnlong%20long*%20Fibonacci(size_t%20N)%5Cn%7B%5Cn%20%20%20%20long%20long*%20fibArray%20%3D%20malloc(sizeof(long%20long)%20*%20(N%20%2B%201))%3B%5Cn%20%20%20%20if%20(!fibArray)%20return%20NULL%3B%20%2F%2F%20%E9%98%B2%E6%AD%A2%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%A4%B1%E8%B4%A5%5Cn%5Cn%20%20%20%20if%20(N%20%3E%3D%200)%20fibArray%5B0%5D%20%3D%200%3B%5Cn%20%20%20%20if%20(N%20%3E%3D%201)%20fibArray%5B1%5D%20%3D%201%3B%5Cn%5Cn%20%20%20%20for%20(size_t%20i%20%3D%202%3B%20i%20%3C%3D%20N%3B%20%2B%2Bi)%5Cn%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20fibArray%5Bi%5D%20%3D%20fibArray%5Bi%20-%201%5D%20%2B%20fibArray%5Bi%20-%202%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20fibArray%3B%5Cn%7D%5Cn%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22EmDZy%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><details data-lake-id="u1aab68c6" id="u1aab68c6" open="true" class="lake-collapse"><summary data-lake-id="u3628e2c2" id="u3628e2c2" class="lake-summary"><span data-lake-id="u26667ef9" id="u26667ef9" class="lake-fontsize-12">解释</span></summary><h3 data-lake-id="0a60c2ce" id="0a60c2ce"><span data-lake-id="u6f0ff9ce" id="u6f0ff9ce">🔧</span><span data-lake-id="udf71c421" id="udf71c421"> 代码逻辑是什么？</span></h3><p data-lake-id="uc5ce7a6e" id="uc5ce7a6e"><span data-lake-id="ud497092b" id="ud497092b">你想求斐波那契第 N 项，结果是：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22Fib(N)%20%3D%20Fib(N-1)%20%2B%20Fib(N-2)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22uAwPD%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u5fc65f25" id="u5fc65f25"><span data-lake-id="ubd3fa769" id="ubd3fa769">比如：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22Fib(5)%20%3D%20Fib(4)%20%2B%20Fib(3)%5Cn%20%20%20%20%20%20%20%3D%20(Fib(3)%20%2B%20Fib(2))%20%2B%20(Fib(2)%20%2B%20Fib(1))%5Cn%20%20%20%20%20%20%20...%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Eda6x%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="uf7808bc5" id="uf7808bc5"><span data-lake-id="u04cc804f" id="u04cc804f">不断递归下去，像</span><strong><span data-lake-id="u2e80c5b5" id="u2e80c5b5">一棵二叉树展开</span></strong><span data-lake-id="u891b001a" id="u891b001a">。</span></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22P9JJN%22%7D"></card><h3 data-lake-id="865bde30" id="865bde30"><span data-lake-id="u292a3034" id="u292a3034">📈</span><span data-lake-id="u5ca638ae" id="u5ca638ae"> 为什么说时间复杂度是 O(2^N)？</span></h3><p data-lake-id="u50adedfd" id="u50adedfd"><span data-lake-id="u97b9cbef" id="u97b9cbef">我们来数一下调用了多少次 </span><code data-lake-id="u436e3ad4" id="u436e3ad4"><span data-lake-id="u11a39be3" id="u11a39be3">Fib()</span></code><span data-lake-id="u1cfdf575" id="u1cfdf575">：</span></p><ul list="u2a571cb5"><li fid="u003dedbc" data-lake-id="uaffaff3b" id="uaffaff3b"><code data-lake-id="uf1f462bb" id="uf1f462bb"><span data-lake-id="u1d4189e4" id="u1d4189e4">Fib(5)</span></code><span data-lake-id="u49ab9c82" id="u49ab9c82"> 需要调用：</span></li></ul><ul list="u2a571cb5" data-lake-indent="1"><li fid="ue15f593f" data-lake-id="u803b21ba" id="u803b21ba"><code data-lake-id="u611805f2" id="u611805f2"><span data-lake-id="uddabb965" id="uddabb965">Fib(4)</span></code><span data-lake-id="u825b58b0" id="u825b58b0"> 和 </span><code data-lake-id="u6fe1ae1a" id="u6fe1ae1a"><span data-lake-id="ud4646383" id="ud4646383">Fib(3)</span></code></li><li fid="ue15f593f" data-lake-id="ua809ca3d" id="ua809ca3d"><span data-lake-id="u0719f928" id="u0719f928">而 </span><code data-lake-id="uf5170845" id="uf5170845"><span data-lake-id="u9f255b3b" id="u9f255b3b">Fib(4)</span></code><span data-lake-id="uf9a0c282" id="uf9a0c282"> 又要调用 </span><code data-lake-id="u9d2c7320" id="u9d2c7320"><span data-lake-id="u886aef23" id="u886aef23">Fib(3)</span></code><span data-lake-id="ucb7d7a50" id="ucb7d7a50"> 和 </span><code data-lake-id="u0c57f295" id="u0c57f295"><span data-lake-id="u5f473edc" id="u5f473edc">Fib(2)</span></code></li><li fid="ue15f593f" data-lake-id="uca38b28a" id="uca38b28a"><code data-lake-id="u4ee92399" id="u4ee92399"><span data-lake-id="u403dc84d" id="u403dc84d">Fib(3)</span></code><span data-lake-id="uea811ce6" id="uea811ce6"> 又要调用 </span><code data-lake-id="u71be28e9" id="u71be28e9"><span data-lake-id="uf8454bfa" id="uf8454bfa">Fib(2)</span></code><span data-lake-id="u59f28fe0" id="u59f28fe0"> 和 </span><code data-lake-id="u017293ff" id="u017293ff"><span data-lake-id="u05038556" id="u05038556">Fib(1)</span></code></li></ul><p data-lake-id="u6b85db25" id="u6b85db25"><span data-lake-id="ub6a55023" id="ub6a55023">我们会发现很多重复计算，比如 </span><code data-lake-id="u8a181d61" id="u8a181d61"><span data-lake-id="u542ac825" id="u542ac825">Fib(3)</span></code><span data-lake-id="u9b2b5ad2" id="u9b2b5ad2"> 被计算了多次。</span></p><p data-lake-id="u556d3d2f" id="u556d3d2f"><span data-lake-id="u004e548a" id="u004e548a">🔁</span><span data-lake-id="uef4e88b5" id="uef4e88b5"> 这是</span><strong><span data-lake-id="ue98482d9" id="ue98482d9">重复子问题</span></strong><span data-lake-id="ud8b04135" id="ud8b04135">，递归每一层都“分裂成2个新问题”，就像</span><strong><span data-lake-id="u6759bfec" id="u6759bfec">一个二叉树</span></strong><span data-lake-id="uec761ecb" id="uec761ecb">，总共有近似 </span><code data-lake-id="u7322428a" id="u7322428a"><span data-lake-id="ue63e9755" id="ue63e9755">2^N</span></code><span data-lake-id="udb1502e9" id="udb1502e9"> 个节点，所以时间复杂度是：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E2%8F%B1%20O(2%5EN)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22RmSC9%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22J0CTt%22%7D"></card><h2 data-lake-id="WKYr9" id="WKYr9"><span data-lake-id="uf10e1654" id="uf10e1654">🧠</span><span data-lake-id="u694a913d" id="u694a913d"> 什么是动态规划？（重点）</span></h2><h3 data-lake-id="h7Jsk" id="h7Jsk"><span data-lake-id="u803921c3" id="u803921c3">📌</span><span data-lake-id="u3d352429" id="u3d352429"> 本质：</span><strong><span data-lake-id="u760deb34" id="u760deb34">把子问题的结果存下来，下次就不重复算了</span></strong></h3><p data-lake-id="ufab26f00" id="ufab26f00"><span data-lake-id="u5b0fa008" id="u5b0fa008">就像你解数学题，算出中间结果后记下来，后面遇到一样的式子就直接用，不再重新算。</span></p><h3 data-lake-id="bIJ9r" id="bIJ9r"><span data-lake-id="u8d32e73c" id="u8d32e73c">🚫</span><span data-lake-id="uba326013" id="uba326013"> 递归的问题：</span></h3><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22Fib(5)%5Cn%E2%94%94%E2%94%80%E2%94%80%20Fib(4)%5Cn%20%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Fib(3)%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%9C%E2%94%80%E2%94%80%20Fib(2)%5Cn%20%20%20%20%E2%94%82%20%20%20%E2%94%94%E2%94%80%E2%94%80%20Fib(1)%5Cn%20%20%20%20%E2%94%94%E2%94%80%E2%94%80%20Fib(2)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22fuANz%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="ub097ba7f" id="ub097ba7f"><span data-lake-id="u34a2f454" id="u34a2f454">这里 </span><code data-lake-id="u5a03d45b" id="u5a03d45b"><span data-lake-id="udfb1903d" id="udfb1903d">Fib(2)</span></code><span data-lake-id="uf0403a70" id="uf0403a70"> 被计算了两次，如果把它</span><strong><span data-lake-id="ufa4f6a36" id="ufa4f6a36">第一次计算的结果保存下来</span></strong><span data-lake-id="ud987853e" id="ud987853e">，就不用算第二次了！</span></p><card type="block" name="hr" value="data:%7B%22id%22%3A%22xC709%22%7D"></card><h2 data-lake-id="iSWzg" id="iSWzg"><span data-lake-id="ue2e2de21" id="ue2e2de21">✅</span><span data-lake-id="u2359002c" id="u2359002c"> 二、动态规划版本 </span><code data-lake-id="ud1934a57" id="ud1934a57"><span data-lake-id="u575afe4f" id="u575afe4f">Fibonacci(N)</span></code><span data-lake-id="u95dea187" id="u95dea187"> 分析</span></h2><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22long%20long*%20Fibonacci(size_t%20N)%5Cn%7B%5Cn%20%20%20%20long%20long*%20fibArray%20%3D%20malloc(sizeof(long%20long)%20*%20(N%2B1))%3B%5Cn%20%20%20%20fibArray%5B0%5D%20%3D%200%3B%5Cn%20%20%20%20if%20(N%20%3D%3D%200)%5Cn%20%20%20%20%20%20%20%20return%20fibArray%3B%5Cn%20%20%20%20fibArray%5B1%5D%20%3D%201%3B%5Cn%5Cn%20%20%20%20for%20(int%20i%20%3D%202%3B%20i%20%3C%3D%20N%3B%20%2B%2Bi)%5Cn%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20fibArray%5Bi%5D%20%3D%20fibArray%5Bi-1%5D%20%2B%20fibArray%5Bi-2%5D%3B%5Cn%20%20%20%20%7D%5Cn%20%20%20%20return%20fibArray%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22nZ6Lh%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22fxjW1%22%7D"></card><h3 data-lake-id="x2TPL" id="x2TPL"><span data-lake-id="u5eebfe68" id="u5eebfe68">🔁</span><span data-lake-id="ua2d21082" id="ua2d21082"> 这段代码在干嘛？</span></h3><ol list="u2df17459"><li fid="ued616cee" data-lake-id="u5efdbc2d" id="u5efdbc2d"><span data-lake-id="u7a93f9eb" id="u7a93f9eb">用一个数组 </span><code data-lake-id="u417ce8a5" id="u417ce8a5"><span data-lake-id="ud23da6c4" id="ud23da6c4">fibArray[]</span></code><span data-lake-id="ueb0ce081" id="ueb0ce081"> 来存储已经算过的结果：</span></li></ol><ul list="u756d6854" data-lake-indent="1"><li fid="uabe210d9" data-lake-id="ua779d9c0" id="ua779d9c0"><code data-lake-id="u4e86cf79" id="u4e86cf79"><span data-lake-id="ue9390a83" id="ue9390a83">fibArray[0] = 0</span></code></li><li fid="uabe210d9" data-lake-id="u6fe66dc1" id="u6fe66dc1"><code data-lake-id="u54847fe0" id="u54847fe0"><span data-lake-id="u8951d125" id="u8951d125">fibArray[1] = 1</span></code></li></ul><ol list="u2df17459" start="2"><li fid="ued616cee" data-lake-id="ub582e797" id="ub582e797"><span data-lake-id="u786122d4" id="u786122d4">然后从 2 开始，逐项往后推：</span></li></ol><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22fib%5B2%5D%20%3D%20fib%5B1%5D%20%2B%20fib%5B0%5D%5Cnfib%5B3%5D%20%3D%20fib%5B2%5D%20%2B%20fib%5B1%5D%5Cn...%5Cnfib%5BN%5D%20%3D%20fib%5BN-1%5D%20%2B%20fib%5BN-2%5D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Zm0Ds%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22xDQAl%22%7D"></card><h3 data-lake-id="coBPn" id="coBPn"><span data-lake-id="ube9b1a9f" id="ube9b1a9f">✅</span><span data-lake-id="u3bb3ec32" id="u3bb3ec32"> 时间复杂度是多少？</span></h3><ul list="u44ad7995"><li fid="u1bb1b18d" data-lake-id="ufd6525af" id="ufd6525af"><span data-lake-id="u56606e3e" id="u56606e3e">循环执行了 </span><code data-lake-id="uab7abe94" id="uab7abe94"><span data-lake-id="u266cd9cd" id="u266cd9cd">N - 1</span></code><span data-lake-id="ub3782a64" id="ub3782a64"> 次</span></li><li fid="u1bb1b18d" data-lake-id="uf2578691" id="uf2578691"><span data-lake-id="uc28f7463" id="uc28f7463">每次只做一次加法，耗时 O(1)</span></li></ul><p data-lake-id="u3f53db1b" id="u3f53db1b"><span data-lake-id="u06a4c112" id="u06a4c112">所以整体时间复杂度就是：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22plain%22%2C%22code%22%3A%22%E2%8F%B1%20O(N)%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22ERAxt%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><card type="block" name="hr" value="data:%7B%22id%22%3A%22gX5JM%22%7D"></card><h3 data-lake-id="TS7I7" id="TS7I7"><span data-lake-id="u2ebab4b1" id="u2ebab4b1">✅</span><span data-lake-id="u87db8704" id="u87db8704"> 为什么说它用了“动态规划思想”？</span></h3><p data-lake-id="u7332d6dd" id="u7332d6dd"><strong><span data-lake-id="u530e0857" id="u530e0857">动态规划的两个核心特点是：</span></strong></p><ol list="u7d07e405"><li fid="u09a34856" data-lake-id="uaac0ce67" id="uaac0ce67"><strong><span data-lake-id="u970952ba" id="u970952ba">最优子结构</span></strong><span data-lake-id="u9d89f3a9" id="u9d89f3a9">：当前问题的最优解可以由子问题的最优解推导出来（如：</span><code data-lake-id="u7e87185a" id="u7e87185a"><span data-lake-id="u2dd7d8fa" id="u2dd7d8fa">Fib(N) = Fib(N-1) + Fib(N-2)</span></code><span data-lake-id="ude438c0c" id="ude438c0c">）</span></li><li fid="u09a34856" data-lake-id="ue93277eb" id="ue93277eb"><strong><span data-lake-id="u5d72ce83" id="u5d72ce83">重叠子问题</span></strong><span data-lake-id="udd9d2177" id="udd9d2177">：多个子问题会反复出现（如递归里的 </span><code data-lake-id="u257b9f81" id="u257b9f81"><span data-lake-id="ua5f48902" id="ua5f48902">Fib(2)</span></code><span data-lake-id="u6d816087" id="u6d816087">、</span><code data-lake-id="u2e46ddec" id="u2e46ddec"><span data-lake-id="u73ebf146" id="u73ebf146">Fib(3)</span></code><span data-lake-id="uc5c69b7c" id="uc5c69b7c"> 重复出现）</span></li></ol><p data-lake-id="ua3eba381" id="ua3eba381"><span data-lake-id="u3369b81d" id="u3369b81d">这个数组版本就是在</span><strong><span data-lake-id="ua3a7dd77" id="ua3a7dd77">记录每一步的中间值</span></strong><span data-lake-id="u45fda465" id="u45fda465">，避免重复计算。</span></p></details><p data-lake-id="u9bd87618" id="u9bd87618"><strong><span data-lake-id="uf15a4117" id="uf15a4117" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例答案及分析： </span></strong></p><p data-lake-id="ua4e7c2fa" id="ua4e7c2fa"><span data-lake-id="u59c5fd92" id="u59c5fd92" class="lake-fontsize-12" style="color: rgb(119,119,119)">1. 实例1基本操作执行了2N+10次，通过推导大O阶方法知道，时间复杂度为 </span><strong><span data-lake-id="ufaad7ecf" id="ufaad7ecf" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N) </span></strong></p><p data-lake-id="uaeda95da" id="uaeda95da"><span data-lake-id="u88a72059" id="u88a72059" class="lake-fontsize-12" style="color: rgb(119,119,119)">2. 实例2基本操作执行了M+N次，有两个未知数M和N，时间复杂度为 </span><strong><span data-lake-id="u02738615" id="u02738615" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N+M) </span></strong></p><p data-lake-id="u7ff6f2a1" id="u7ff6f2a1"><span data-lake-id="u034658b8" id="u034658b8" class="lake-fontsize-12" style="color: rgb(119,119,119)">3. 实例3基本操作执行了10次，通过推导大O阶方法，时间复杂度为 </span><strong><span data-lake-id="u5ea3345c" id="u5ea3345c" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(1)</span></strong><span data-lake-id="u2f07f892" id="u2f07f892" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span></p><p data-lake-id="uc3949de6" id="uc3949de6"><span data-lake-id="u69238230" id="u69238230" class="lake-fontsize-12" style="color: rgb(119,119,119)">4. 实例4基本操作执行最好1次，最坏N次，时间复杂度一般看最坏，时间复杂度为 </span><strong><span data-lake-id="u60ade3cc" id="u60ade3cc" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N) </span></strong></p><p data-lake-id="u7d510c90" id="u7d510c90"><span data-lake-id="ua73a5ba2" id="ua73a5ba2" class="lake-fontsize-12" style="color: rgb(119,119,119)">5. 实例5基本操作执行最好N次，最坏执行了</span><strong><span data-lake-id="u67f55e30" id="u67f55e30" class="lake-fontsize-12" style="color: rgb(119,119,119)">(N*(N+1))/2</span></strong><span data-lake-id="u350fb468" id="u350fb468" class="lake-fontsize-12" style="color: rgb(119,119,119)">次，通过推导大O阶方法+时间复杂度一般看最坏，时间复杂度为 </span><strong><span data-lake-id="uc3ff5f74" id="uc3ff5f74" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N^2)</span></strong><span data-lake-id="uad32bdae" id="uad32bdae" class="lake-fontsize-12" style="color: rgb(119,119,119)"> </span></p><p data-lake-id="ua40b38cf" id="ua40b38cf"><span data-lake-id="u28e825c1" id="u28e825c1" class="lake-fontsize-12" style="color: rgb(119,119,119)">6. 实例6基本操作执行最好1次，最坏</span><strong><span data-lake-id="u94bbc64b" id="u94bbc64b" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(logN)</span></strong><span data-lake-id="u29af7ca4" id="u29af7ca4" class="lake-fontsize-12" style="color: rgb(119,119,119)">次，时间复杂度为 </span><strong><span data-lake-id="ubbd24463" id="ubbd24463" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(logN)</span></strong><span data-lake-id="u6f77b85b" id="u6f77b85b" class="lake-fontsize-12" style="color: rgb(119,119,119)"> ps：logN在算法分析中表示是底数为2，对数为N。有些地方会写成lgN。（建议通过折纸查找的方式讲解logN是怎么计算出来的） </span></p><p data-lake-id="uf5de10bf" id="uf5de10bf"><span data-lake-id="ue84b3719" id="ue84b3719" class="lake-fontsize-12" style="color: rgb(119,119,119)">7. 实例7通过计算分析发现基本操作递归了N次，时间复杂度为</span><strong><span data-lake-id="u527c1843" id="u527c1843" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(N)</span></strong><span data-lake-id="u0c46cdaa" id="u0c46cdaa" class="lake-fontsize-12" style="color: rgb(119,119,119)">。 </span></p><p data-lake-id="u065af904" id="u065af904"><span data-lake-id="ued3e0872" id="ued3e0872" class="lake-fontsize-12" style="color: rgb(119,119,119)">8. 实例8通过计算分析发现基本操作递归了2^N次，时间复杂度为</span><strong><span data-lake-id="u24e15987" id="u24e15987" class="lake-fontsize-12" style="color: rgb(119,119,119)">O(2^N)</span></strong><span data-lake-id="u01f061e1" id="u01f061e1" class="lake-fontsize-12" style="color: rgb(119,119,119)">。（建议画图递归栈帧的二叉树讲解）</span></p><h2 data-lake-id="A5jjE" id="A5jjE"><span data-lake-id="ue2ad3e3c" id="ue2ad3e3c" style="color: #262626">3.</span><span data-lake-id="u5c7b53e0" id="u5c7b53e0" class="lake-fontsize-12" style="color: rgb(51,51,51)"> </span><strong><span data-lake-id="u4d4be625" id="u4d4be625" class="lake-fontsize-12" style="color: rgb(51,51,51)">空间复杂度</span></strong></h2><p data-lake-id="u4c55ad37" id="u4c55ad37"><strong><span data-lake-id="u1d662e2c" id="u1d662e2c" style="color: #1DC0C9">时间复杂度不计算时间，计算大概的运算次数</span></strong></p><p data-lake-id="uca703a52" id="uca703a52"><strong><span data-lake-id="u296f5532" id="u296f5532" style="color: #1DC0C9">空间复杂度不计算空间，计算大概定义的变量个数</span></strong></p><p data-lake-id="u0be12722" id="u0be12722"><span data-lake-id="u1200b617" id="u1200b617" class="lake-fontsize-12">空间复杂度也是一个数学表达式，是对一个算法在运行过程中</span><strong><span data-lake-id="uc28be17b" id="uc28be17b" class="lake-fontsize-12" style="color: #000000">临时占用存储空间大小的量度</span></strong><span data-lake-id="u4b169e50" id="u4b169e50" class="lake-fontsize-12" style="color: rgb(119,119,119)">。</span></p><p data-lake-id="u34f8350c" id="u34f8350c" style="text-align: left"><span data-lake-id="uba91e81b" id="uba91e81b" class="lake-fontsize-12" style="color: rgb(119,119,119)">空间复杂度不是程序占用了多少</span><span data-lake-id="u121051e0" id="u121051e0" class="lake-fontsize-12" style="color: rgb(119,119,119)">b</span><span data-lake-id="u610f4fe9" id="u610f4fe9" class="lake-fontsize-12" style="color: rgb(119,119,119)">ytes</span><span data-lake-id="ue32263d0" id="ue32263d0" class="lake-fontsize-12" style="color: rgb(119,119,119)">的空间，因为这个也没太大意义，所以空间复杂度算的是变量的个数。</span><span data-lake-id="uef370d01" id="uef370d01" class="lake-fontsize-12" style="color: rgb(119,119,119)">空间复杂度计算规则基本跟实践复杂度类似，也使用</span><strong><span data-lake-id="u9108bcd7" id="u9108bcd7" class="lake-fontsize-12" style="color: rgb(119,119,119)">大</span></strong><span data-lake-id="u093d1067" id="u093d1067" class="lake-fontsize-12" style="color: rgb(119,119,119)">O</span><strong><span data-lake-id="u1ba2c956" id="u1ba2c956" class="lake-fontsize-12" style="color: rgb(119,119,119)">渐进表示法</span></strong><span data-lake-id="uf532633d" id="uf532633d" class="lake-fontsize-12" style="color: rgb(119,119,119)">。</span></p><p data-lake-id="u69397f9d" id="u69397f9d"><span data-lake-id="uccd15fed" id="uccd15fed" class="lake-fontsize-12" style="color: rgb(119,119,119)">注意：</span><strong><span data-lake-id="u68aaf1bf" id="u68aaf1bf" class="lake-fontsize-12" style="color: rgb(119,119,119)">函数运行时所需要的栈空间</span></strong><span data-lake-id="u3faa9e91" id="u3faa9e91" class="lake-fontsize-12" style="color: rgb(119,119,119)">(</span><strong><span data-lake-id="u4f626f5a" id="u4f626f5a" class="lake-fontsize-12" style="color: rgb(119,119,119)">存储参数、局部变量、一些寄存器信息等</span></strong><span data-lake-id="u536a996c" id="u536a996c" class="lake-fontsize-12" style="color: rgb(119,119,119)">)</span><strong><span data-lake-id="u9774d1b8" id="u9774d1b8" class="lake-fontsize-12" style="color: rgb(119,119,119)">在编译期间已经确定好了，因此空间复杂度主要通过函数在运行时候显式申请的额外空间来确定。</span></strong></p><p data-lake-id="ue68f3cfd" id="ue68f3cfd" style="text-align: left"><strong><span data-lake-id="u14c1547b" id="u14c1547b" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例</span></strong><span data-lake-id="ud49fcb76" id="ud49fcb76" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><strong><span data-lake-id="u3505659e" id="u3505659e" class="lake-fontsize-12" style="color: rgb(119,119,119)">：</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97BubbleSort%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnvoid%20BubbleSort(int*%20a%2C%20int%20n)%5Cn%7B%5Cn%20%20%20%20assert(a)%3B%5Cn%20for%20(size_t%20end%20%3D%20n%3B%20end%20%3E%200%3B%20--end)%5Cn%20%7B%5Cn%20%20%20%20%20int%20exchange%20%3D%200%3B%5Cn%20%20%20%20%20for%20(size_t%20i%20%3D%201%3B%20i%20%3C%20end%3B%20%2B%2Bi)%5Cn%20%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20%20if%20(a%5Bi-1%5D%20%3E%20a%5Bi%5D)%5Cn%20%20%20%20%20%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20Swap(%26a%5Bi-1%5D%2C%20%26a%5Bi%5D)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20exchange%20%3D%201%3B%5Cn%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%7D%5Cn%20%20%20%20%20if%20(exchange%20%3D%3D%200)%5Cn%20%20%20%20%20%20%20%20%20break%3B%5Cn%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22WACXl%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u28d4f1f5" id="u28d4f1f5"><span data-lake-id="u0cd8c270" id="u0cd8c270" class="lake-fontsize-12">实例2：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97Fibonacci%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cn%2F%2F%20%E8%BF%94%E5%9B%9E%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E7%9A%84%E5%89%8Dn%E9%A1%B9%5Cnlong%20long*%20Fibonacci(size_t%20n)%5Cn%7B%5Cn%20if(n%3D%3D0)%5Cn%20%20%20%20%20return%20NULL%3B%5Cn%20%5Cn%20long%20long%20*%20fibArray%20%3D%20(long%20long%20*)malloc((n%2B1)%20*%20sizeof(long%20long))%3B%5Cn%20fibArray%5B0%5D%20%3D%200%3B%5Cn%20fibArray%5B1%5D%20%3D%201%3B%5Cn%20%20%20%20%20for%20(int%20i%20%3D%202%3B%20i%20%3C%3D%20n%20%3B%20%2B%2Bi)%5Cn%20%20%20%20%7B%5Cn%20%20%20%20%20%20%20%20%20fibArray%5Bi%5D%20%3D%20fibArray%5Bi%20-%201%5D%20%2B%20fibArray%20%5Bi%20-%202%5D%3B%5Cn%20%20%20%20%20%7D%5Cn%20return%20fibArray%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22C5zO1%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u63a8cd5d" id="u63a8cd5d"><span data-lake-id="uacc64167" id="uacc64167" class="lake-fontsize-12">实例3：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22%2F%2F%20%E8%AE%A1%E7%AE%97%E9%98%B6%E4%B9%98%E9%80%92%E5%BD%92Fac%E7%9A%84%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9F%5Cnlong%20long%20Fac(size_t%20N)%5Cn%7B%5Cn%20if(N%20%3D%3D%200)%5Cn%20%20%20%20%20return%201%3B%5Cn%20%5Cn%20return%20Fac(N-1)*N%3B%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22customStyle%22%3A%5B%5D%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Lxd2Z%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u4ad8944d" id="u4ad8944d"><strong><span data-lake-id="uf5e97369" id="uf5e97369" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例答案及分析：</span></strong></p><p data-lake-id="uadf62b1f" id="uadf62b1f"><span data-lake-id="udf8d3652" id="udf8d3652" class="lake-fontsize-12" style="color: rgb(119,119,119)">1. </span><span data-lake-id="uf5578be8" id="uf5578be8" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例</span><span data-lake-id="u4d7bd790" id="u4d7bd790" class="lake-fontsize-12" style="color: rgb(119,119,119)">1</span><span data-lake-id="uc78efb42" id="uc78efb42" class="lake-fontsize-12" style="color: rgb(119,119,119)">使用了常数个额外空间，所以空间复杂度为</span><span data-lake-id="u53039005" id="u53039005" class="lake-fontsize-12" style="color: rgb(119,119,119)"> O(1) </span></p><p data-lake-id="u897b30cb" id="u897b30cb"><span data-lake-id="u86b5d508" id="u86b5d508" class="lake-fontsize-12" style="color: rgb(119,119,119)">2. </span><span data-lake-id="u53a396d9" id="u53a396d9" class="lake-fontsize-12" style="color: rgb(119,119,119)">实例</span><span data-lake-id="ua89ca6e3" id="ua89ca6e3" class="lake-fontsize-12" style="color: rgb(119,119,119)">2</span><span data-lake-id="uabeced3e" id="uabeced3e" class="lake-fontsize-12" style="color: rgb(119,119,119)">动态开辟了</span><span data-lake-id="ud8486dd5" id="ud8486dd5" class="lake-fontsize-12" style="color: rgb(119,119,119)">N</span><span data-lake-id="u749ee36b" id="u749ee36b" class="lake-fontsize-12" style="color: rgb(119,119,119)">个空间，空间复杂度为</span><span data-lake-id="u41138612" id="u41138612" class="lake-fontsize-12" style="color: rgb(119,119,119)"> O(N) </span></p><p data-lake-id="u21281da8" id="u21281da8"><span data-lake-id="uef9a4514" id="uef9a4514" class="lake-fontsize-12" style="color: rgb(119,119,119)">3. 实例3递归调用了N次，开辟了N个栈帧，每个栈帧使用了常数个空间。空间复杂度为O(N)</span></p><h2 data-lake-id="LmNHR" id="LmNHR"><span data-lake-id="u4c5241d3" id="u4c5241d3">4.常见复杂度对比</span></h2><p data-lake-id="u5623ddc3" id="u5623ddc3"><span data-lake-id="uac66c5c5" id="uac66c5c5" class="lake-fontsize-12" style="color: rgb(119,119,119)">一般算法常见的复杂度如下：</span></p><p data-lake-id="u4df0d4fa" id="u4df0d4fa"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748430118577-e90b985f-bac7-4f9f-a2b8-062bd9b26de0.png%22%2C%22taskId%22%3A%22u79d2b29d-811b-482d-883b-eb9c37a6f60%22%2C%22clientId%22%3A%22u0c0aad58-f128-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A519.3333333333334%2C%22height%22%3A263%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1230150%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A779%2C%22originHeight%22%3A394%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%222N%2B3N1OG(2)N%2B14%22%2C%22x%22%3A21%2C%22y%22%3A240%2C%22width%22%3A217%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%22N%E4%B8%AA3%2B2N2%2B4N%2B6%22%2C%22x%22%3A34%2C%22y%22%3A298%2C%22width%22%3A190%2C%22height%22%3A24%7D%2C%7B%22text%22%3A%22310G(2)N%2B4%22%2C%22x%22%3A56%2C%22y%22%3A185%2C%22width%22%3A144%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%22N1OGN%E9%98%B6%22%2C%22x%22%3A584%2C%22y%22%3A240%2C%22width%22%3A101%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%223N%E5%85%A52%2B4N%2B5%22%2C%22x%22%3A62%2C%22y%22%3A128%2C%22width%22%3A131%2C%22height%22%3A23%7D%2C%7B%22text%22%3A%220(1OGN)%22%2C%22x%22%3A327%2C%22y%22%3A186%2C%22width%22%3A101%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%220(N2)%22%2C%22x%22%3A331%2C%22y%22%3A128%2C%22width%22%3A89%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%220(NA3)%22%2C%22x%22%3A335%2C%22y%22%3A298%2C%22width%22%3A85%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%225201314%22%2C%22x%22%3A79%2C%22y%22%3A15%2C%22width%22%3A101%2C%22height%22%3A22%7D%2C%7B%22text%22%3A%22O(N1OGN)%22%2C%22x%22%3A322%2C%22y%22%3A242%2C%22width%22%3A110%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%220(2N)%22%2C%22x%22%3A334%2C%22y%22%3A355%2C%22width%22%3A83%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%22%E5%AF%B9%E6%95%B0%E9%98%B6%22%2C%22x%22%3A598%2C%22y%22%3A185%2C%22width%22%3A78%2C%22height%22%3A24%7D%2C%7B%22text%22%3A%22%E6%8C%87%E6%95%B0%E9%98%B6%22%2C%22x%22%3A599%2C%22y%22%3A356%2C%22width%22%3A77%2C%22height%22%3A23%7D%2C%7B%22text%22%3A%22%E7%AB%8B%E6%96%B9%E9%98%B6%22%2C%22x%22%3A600%2C%22y%22%3A298%2C%22width%22%3A76%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%22%E5%B9%B3%E6%96%B9%E9%98%B6%22%2C%22x%22%3A601%2C%22y%22%3A127%2C%22width%22%3A75%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%22%E5%B8%B8%E6%95%B0%E9%98%B6%22%2C%22x%22%3A602%2C%22y%22%3A15%2C%22width%22%3A76%2C%22height%22%3A23%7D%2C%7B%22text%22%3A%22%E7%BA%BF%E6%80%A7%E9%98%B6%22%2C%22x%22%3A599%2C%22y%22%3A72%2C%22width%22%3A79%2C%22height%22%3A23%7D%2C%7B%22text%22%3A%220(1)%22%2C%22x%22%3A346%2C%22y%22%3A14%2C%22width%22%3A63%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%223N%2B4%22%2C%22x%22%3A97%2C%22y%22%3A73%2C%22width%22%3A64%2C%22height%22%3A22%7D%2C%7B%22text%22%3A%22O(N)%22%2C%22x%22%3A344%2C%22y%22%3A72%2C%22width%22%3A65%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%222N%22%2C%22x%22%3A103%2C%22y%22%3A356%2C%22width%22%3A48%2C%22height%22%3A22%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23d3d9ec%22%2C%22id%22%3A%22u780d0c5a%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u036e4524" id="u036e4524"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748430131881-2a54ee31-eea4-4e69-8b5d-16b8e7780867.png%22%2C%22taskId%22%3A%22ue4d4e0b1-d154-43d4-b4c4-a199bda3c35%22%2C%22clientId%22%3A%22u0c0aad58-f128-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A548.6666666666666%2C%22height%22%3A318%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1573377%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A823%2C%22originHeight%22%3A477%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22BIG-OCOMPLEXITY%22%2C%22x%22%3A316%2C%22y%22%3A15%2C%22width%22%3A186%2C%22height%22%3A25%7D%2C%7B%22text%22%3A%22%22%2C%22x%22%3A20%2C%22y%22%3A200%2C%22width%22%3A15%2C%22height%22%3A58%7D%2C%7B%22text%22%3A%22%E4%B8%80O(NLOGN)%22%2C%22x%22%3A724%2C%22y%22%3A251%2C%22width%22%3A82%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22%E4%B8%800(NA2)%22%2C%22x%22%3A722%2C%22y%22%3A273%2C%22width%22%3A80%2C%22height%22%3A16%7D%2C%7B%22text%22%3A%22%E4%B8%80O(LOGN)%22%2C%22x%22%3A728%2C%22y%22%3A200%2C%22width%22%3A72%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%22LEMENTS%22%2C%22x%22%3A362%2C%22y%22%3A442%2C%22width%22%3A53%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22%E4%B8%80O(2N)%22%2C%22x%22%3A740%2C%22y%22%3A302%2C%22width%22%3A59%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22600%22%2C%22x%22%3A42%2C%22y%22%3A191%2C%22width%22%3A26%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22700%22%2C%22x%22%3A44%2C%22y%22%3A156%2C%22width%22%3A28%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%E4%B8%800(1)%22%2C%22x%22%3A726%2C%22y%22%3A174%2C%22width%22%3A60%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%221000%22%2C%22x%22%3A37%2C%22y%22%3A51%2C%22width%22%3A30%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22300%22%2C%22x%22%3A44%2C%22y%22%3A294%2C%22width%22%3A27%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%2290%22%2C%22x%22%3A621%2C%22y%22%3A416%2C%22width%22%3A26%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%2280%22%2C%22x%22%3A560%2C%22y%22%3A416%2C%22width%22%3A24%2C%22height%22%3A16%7D%2C%7B%22text%22%3A%22%E4%B8%80O(N)%22%2C%22x%22%3A737%2C%22y%22%3A225%2C%22width%22%3A55%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22800%22%2C%22x%22%3A44%2C%22y%22%3A121%2C%22width%22%3A26%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22400%22%2C%22x%22%3A43%2C%22y%22%3A260%2C%22width%22%3A29%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%2230%22%2C%22x%22%3A253%2C%22y%22%3A418%2C%22width%22%3A23%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%2250%22%2C%22x%22%3A370%2C%22y%22%3A417%2C%22width%22%3A31%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%2270%22%2C%22x%22%3A500%2C%22y%22%3A416%2C%22width%22%3A23%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%22100%22%2C%22x%22%3A678%2C%22y%22%3A417%2C%22width%22%3A31%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%2220%22%2C%22x%22%3A191%2C%22y%22%3A418%2C%22width%22%3A23%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22900%22%2C%22x%22%3A43%2C%22y%22%3A85%2C%22width%22%3A25%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22500%22%2C%22x%22%3A42%2C%22y%22%3A225%2C%22width%22%3A28%2C%22height%22%3A13%7D%2C%7B%22text%22%3A%22100%22%2C%22x%22%3A44%2C%22y%22%3A364%2C%22width%22%3A27%2C%22height%22%3A12%7D%2C%7B%22text%22%3A%22%E4%B8%80O(NL!)%22%2C%22x%22%3A741%2C%22y%22%3A326%2C%22width%22%3A52%2C%22height%22%3A14%7D%2C%7B%22text%22%3A%2260%22%2C%22x%22%3A435%2C%22y%22%3A417%2C%22width%22%3A28%2C%22height%22%3A15%7D%2C%7B%22text%22%3A%2240%22%2C%22x%22%3A317%2C%22y%22%3A418%2C%22width%22%3A19%2C%22height%22%3A10%7D%2C%7B%22text%22%3A%22200%22%2C%22x%22%3A46%2C%22y%22%3A330%2C%22width%22%3A23%2C%22height%22%3A11%7D%2C%7B%22text%22%3A%2210%22%2C%22x%22%3A131%2C%22y%22%3A418%2C%22width%22%3A20%2C%22height%22%3A10%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f9f9f8%22%2C%22id%22%3A%22ub50c17eb%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><h2 data-lake-id="nOypQ" id="nOypQ"><span data-lake-id="ua4c269a6" id="ua4c269a6">5.复杂度的oj练习 </span></h2><h4 data-lake-id="oNz3G" id="oNz3G"><span data-lake-id="u6fb77e45" id="u6fb77e45" style="color: rgb(119,119,119)">3.1消失的数字OJ链接：</span><span data-lake-id="u67c994b5" id="u67c994b5" style="color: rgb(65,131,196)">https://leetcode-cn.com/problems/missing-number-lcci</span><span data-lake-id="u7ccfdbf1" id="u7ccfdbf1" style="color: rgb(119,119,119)">/</span></h4><p data-lake-id="ufc332229" id="ufc332229"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748430363006-f3fa6550-5ca4-48d9-942f-942acace1bfa.png%22%2C%22taskId%22%3A%22udb77f708-f6e4-4b01-857f-f7d1ca75c86%22%2C%22clientId%22%3A%22u0c0aad58-f128-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A566%2C%22height%22%3A212%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A1082062%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A849%2C%22originHeight%22%3A318%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%E8%BE%93%E5%85%A5%3A%5B9%2C6%2C4%2C2%2C357%2C0%2C1%5D%22%2C%22x%22%3A18%2C%22y%22%3A248%2C%22width%22%3A251%2C%22height%22%3A21%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%85%A5%3A%5B3%2C0%2C1%5D%22%2C%22x%22%3A21%2C%22y%22%3A57%2C%22width%22%3A127%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22012345678%22%2C%22x%22%3A661%2C%22y%22%3A235%2C%22width%22%3A182%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22964235701%22%2C%22x%22%3A660%2C%22y%22%3A256%2C%22width%22%3A177%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22%E7%A4%BA%E4%BE%8B2%3A%22%2C%22x%22%3A0%2C%22y%22%3A191%2C%22width%22%3A59%2C%22height%22%3A19%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%87%BA%3A8%22%2C%22x%22%3A22%2C%22y%22%3A278%2C%22width%22%3A97%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%220123%22%2C%22x%22%3A659%2C%22y%22%3A40%2C%22width%22%3A73%2C%22height%22%3A17%7D%2C%7B%22text%22%3A%22301%22%2C%22x%22%3A662%2C%22y%22%3A62%2C%22width%22%3A56%2C%22height%22%3A16%7D%2C%7B%22text%22%3A%22%E5%87%BA%3A2%22%2C%22x%22%3A23%2C%22y%22%3A86%2C%22width%22%3A66%2C%22height%22%3A18%7D%2C%7B%22text%22%3A%22%22%2C%22x%22%3Anull%2C%22y%22%3A0%2C%22width%22%3Anull%2C%22height%22%3A17%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23faf9f9%22%2C%22id%22%3A%22gBRU3%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="ufb52e1d9" id="ufb52e1d9"><span data-lake-id="u86d6b76d" id="u86d6b76d">思路：num跟数组中数和[0,N]之间所有异或，结果就是要找的数</span></p><p data-lake-id="u6ee1c609" id="u6ee1c609"><span data-lake-id="u7dc4df46" id="u7dc4df46">原理：</span></p><p data-lake-id="ue4d5547c" id="ue4d5547c"><span data-lake-id="ueab2f2de" id="ueab2f2de">相同的两个数异或是0，而数组中没有6，[0,N]之间都有...（写博客时，要学会独立自主，理解以后再复现）</span></p><p data-lake-id="u6175029c" id="u6175029c"><span data-lake-id="u5cc2534f" id="u5cc2534f">​</span><br></p><p data-lake-id="u8f964b34" id="u8f964b34"><span data-lake-id="ud1d39f44" id="ud1d39f44">我们先要明白异或运算性质：</span></p><ol list="u1176c51d"><li fid="uda4e3651" data-lake-id="u485928e4" id="u485928e4"><span data-lake-id="u28edf2f2" id="u28edf2f2">a ^ a = 0 (相同为0，不同为1）</span></li><li fid="uda4e3651" data-lake-id="u077c590f" id="u077c590f"><span data-lake-id="ub3f0a453" id="ub3f0a453">a ^ 0 = a (任何数与0异或等于它本身)</span></li><li fid="uda4e3651" data-lake-id="u114d588f" id="u114d588f"><strong><span data-lake-id="u4bfb946e" id="u4bfb946e" style="color: #DF2A3F">异或运算满足交换律和结合律</span></strong></li></ol><p data-lake-id="ue4cd5274" id="ue4cd5274"><strong><span data-lake-id="u94cfa00d" id="u94cfa00d">​</span></strong><br></p><p data-lake-id="uc7d4afb8" id="uc7d4afb8"><span data-lake-id="uf92a939c" id="uf92a939c">应有的数字是：</span><strong><span data-lake-id="uad93dfe3" id="uad93dfe3">0, 1, 2, 3</span></strong></p><p data-lake-id="uc5c5a44d" id="uc5c5a44d"><span data-lake-id="u58f00fbf" id="u58f00fbf">实际数组是：</span><strong><span data-lake-id="u66564539" id="u66564539">3, 0, 1</span></strong></p><p data-lake-id="ud354edc5" id="ud354edc5"><span data-lake-id="uc50255ce" id="uc50255ce">我们从两个方向做异或：</span></p><p data-lake-id="u5602d206" id="u5602d206"><span data-lake-id="u6c59b0ec" id="u6c59b0ec">1.</span><strong><span data-lake-id="u221b9f9a" id="u221b9f9a">将所有从0到n=3的数异或起来</span></strong></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22result%20%3D%200%20%5E%201%20%5E%202%20%5E%203%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22Lqr0x%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u515d83b4" id="u515d83b4"><span data-lake-id="ud49b900a" id="ud49b900a">我们逐步异或：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%220%20%5E%201%20%3D%201%5Cn1%20%5E%202%20%3D%203%5Cn3%20%5E%203%20%3D%200%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22L1qg5%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u7601be04" id="u7601be04"><span data-lake-id="uc8474266" id="uc8474266">得到结果result = 0(可以不是0，可以是任何数)</span></p><p data-lake-id="uaa6ef471" id="uaa6ef471"><strong><span data-lake-id="u30911b0b" id="u30911b0b">意义：</span></strong><span data-lake-id="u12c0bc48" id="u12c0bc48"><br /></span><span data-lake-id="u074da49d" id="u074da49d">构建“应有的数字总集”中的信息。<br /></span><span data-lake-id="u863bbbd9" id="u863bbbd9">也就是说，如果没有缺失，0~n 这些数字异或起来结果应该是某个值。  </span></p><p data-lake-id="u0b3a2f23" id="u0b3a2f23"><span data-lake-id="u54495914" id="u54495914">​</span><br></p><p data-lake-id="u7d419b71" id="u7d419b71"><span data-lake-id="u4a2d7fe2" id="u4a2d7fe2">2.把nums = [3,0,1]中所有数字继续异或进去</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%22result%20%3D%200%20%5E%203%20%5E%200%20%5E%201%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22jcaMj%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="ud2f5f358" id="ud2f5f358"><span data-lake-id="u1d2c3926" id="u1d2c3926">逐步异或：</span></p><card type="inline" name="codeblock" value="data:%7B%22search%22%3A%22%22%2C%22mode%22%3A%22cpp%22%2C%22code%22%3A%220%20%5E%203%20%3D%203%5Cn3%20%5E%200%20%3D%203%5Cn3%20%5E%201%20%3D%202%22%2C%22autoWrap%22%3Afalse%2C%22lineNumbers%22%3Atrue%2C%22heightLimit%22%3Atrue%2C%22collapsed%22%3Afalse%2C%22hideToolbar%22%3Atrue%2C%22name%22%3A%22%22%2C%22tabSize%22%3Anull%2C%22indentWithTab%22%3Afalse%2C%22lightLines%22%3A%5B%5D%2C%22foldLines%22%3A%5B%5D%2C%22theme%22%3A%22Github%20Light%22%2C%22fontSize%22%3A14%2C%22__spacing%22%3A%22both%22%2C%22id%22%3A%22YQQYl%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card><p data-lake-id="u0f04e053" id="u0f04e053"><span data-lake-id="u8a5a0c1b" id="u8a5a0c1b">得到的数字2就是我们缺失的数字</span></p><p data-lake-id="udc02f98c" id="udc02f98c"><strong><span data-lake-id="ucea24895" id="ucea24895">意义：</span></strong><span data-lake-id="u04e81d18" id="u04e81d18"><br /></span><span data-lake-id="u602af34c" id="u602af34c">把数组中实际</span><strong><span data-lake-id="ud2c19534" id="ud2c19534">出现的数的信息抹掉（抵消）</span></strong><span data-lake-id="u824673f7" id="u824673f7">。<br /></span><span data-lake-id="u9b26ca36" id="u9b26ca36">这些已经出现过的数字会与“应有数字”中的对应数字异或抵消（a ^ a = 0），<br /></span><span data-lake-id="u3cdf1bee" id="u3cdf1bee">所以最终剩下的，就是那个</span><strong><span data-lake-id="uba037da0" id="uba037da0">没有出现</span></strong><span data-lake-id="u1e9d51d9" id="u1e9d51d9">的数字。  </span></p><p data-lake-id="uc6c6d171" id="uc6c6d171"><span data-lake-id="u13703e1f" id="u13703e1f">​</span><br></p><p data-lake-id="u7c79339e" id="u7c79339e"><span data-lake-id="u19a09026" id="u19a09026">这一题重要的是异或是遵循结合律和交换律的，更要了解异或运算的性质</span></p><p data-lake-id="u43c3499a" id="u43c3499a"><span data-lake-id="u4c508c3f" id="u4c508c3f">​</span><br></p><h4 data-lake-id="P4NwL" id="P4NwL"><span data-lake-id="uf196cf8e" id="uf196cf8e" style="color: rgb(119,119,119)">3.2 旋转数组OJ链接：</span><span data-lake-id="u5f649a57" id="u5f649a57" style="color: rgb(65,131,196)">https://leetcode-cn.com/problems/rotate-array</span></h4><p data-lake-id="ue4193c2e" id="ue4193c2e"><card type="inline" name="image" value="data:%7B%22src%22%3A%22https%3A%2F%2Fcdn.nlark.com%2Fyuque%2F0%2F2025%2Fpng%2F49819380%2F1748430387521-18a7ef83-e89a-4a5a-b01c-3491009964b9.png%22%2C%22taskId%22%3A%22u3fdfbf59-38c1-4cca-a4f4-164dca841a3%22%2C%22clientId%22%3A%22u0c0aad58-f128-4%22%2C%22originalType%22%3A%22binary%22%2C%22width%22%3A562%2C%22height%22%3A467%2C%22linkTarget%22%3A%22_blank%22%2C%22name%22%3A%22image.png%22%2C%22size%22%3A2364995%2C%22from%22%3A%22paste%22%2C%22originWidth%22%3A843%2C%22originHeight%22%3A700%2C%22ratio%22%3A1.5%2C%22status%22%3A%22done%22%2C%22style%22%3A%22none%22%2C%22ocrLocations%22%3A%5B%7B%22text%22%3A%22%E5%89%8D%E5%85%A5%3ANUMS%3D%5B1%2C2%2C3%2C4%2C5%2C6%2C7%5D%2CK%3D3%22%2C%22x%22%3A32%2C%22y%22%3A501%2C%22width%22%3A487%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%22%E5%89%8D%E5%85%A5%3ANUMS%3D%5B1%2C2%2C3%2C4%2C5%2C6%2C7%5D%2CK%3D3%22%2C%22x%22%3A38%2C%22y%22%3A100%2C%22width%22%3A486%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%22%E5%90%91%E5%8F%B3%E6%97%8B%E8%BD%AC3%E6%AD%A5%3A%5B5%2C6%2C7%2C1%2C2%2C3%2C4%5D%22%2C%22x%22%3A36%2C%22y%22%3A301%2C%22width%22%3A404%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%22%E5%90%91%E5%8F%B3%E6%97%8B%E8%BD%AC1%E6%AD%A5%3A%5B7%2C1%2C2%2C3%2C4%2C5%2C6%5D%22%2C%22x%22%3A37%2C%22y%22%3A220%2C%22width%22%3A404%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%22%E5%90%91%E5%8F%B3%E6%97%8B%E8%BD%AC2%E6%AD%A5%3A%5B6%2C7%2C1%2C2%2C3%2C4%2C5%5D%22%2C%22x%22%3A37%2C%22y%22%3A261%2C%22width%22%3A404%2C%22height%22%3A26%7D%2C%7B%22text%22%3A%224321567%E5%89%8DN-K%E4%B8%AA%E9%80%86%22%2C%22x%22%3A12%2C%22y%22%3A617%2C%22width%22%3A321%2C%22height%22%3A23%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%87%BA%3A%5B5%2C6%2C7%2C1%2C2%2C3%2C4%5D%22%2C%22x%22%3A37%2C%22y%22%3A141%2C%22width%22%3A290%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%22%E8%BE%93%E5%87%BA%3A%5B5%2C6%2C7%2C1%2C2%2C3%2C4%5D%22%2C%22x%22%3A30%2C%22y%22%3A542%2C%22width%22%3A292%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%224321765%22%2C%22x%22%3A6%2C%22y%22%3A646%2C%22width%22%3A192%2C%22height%22%3A24%7D%2C%7B%22text%22%3A%225671234%22%2C%22x%22%3A5%2C%22y%22%3A676%2C%22width%22%3A193%2C%22height%22%3A24%7D%2C%7B%22text%22%3A%22%22%2C%22x%22%3Anull%2C%22y%22%3A0%2C%22width%22%3Anull%2C%22height%22%3A423%7D%2C%7B%22text%22%3A%22%E5%90%8EK%E4%B8%AA%E9%80%86%E7%BD%AE%22%2C%22x%22%3A206%2C%22y%22%3A645%2C%22width%22%3A121%2C%22height%22%3A24%7D%2C%7B%22text%22%3A%22%E6%95%B4%E4%BD%93%E9%80%86%E7%BD%AE%22%2C%22x%22%3A196%2C%22y%22%3A674%2C%22width%22%3A123%2C%22height%22%3A27%7D%2C%7B%22text%22%3A%22%E6%80%9D%E8%B7%AF%22%2C%22x%22%3A9%2C%22y%22%3A1%2C%22width%22%3A78%2C%22height%22%3A28%7D%2C%7B%22text%22%3A%22%E8%A7%A3%E9%87%8A%3A%22%2C%22x%22%3A38%2C%22y%22%3A181%2C%22width%22%3A102%2C%22height%22%3A23%7D%5D%2C%22showTitle%22%3Afalse%2C%22title%22%3A%22%22%2C%22rotation%22%3A0%2C%22crop%22%3A%5B0%2C0%2C1%2C1%5D%2C%22averageHue%22%3A%22%23f7f7f6%22%2C%22id%22%3A%22KS9Se%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D"></card></p><p data-lake-id="u558d7a4b" id="u558d7a4b"><br></p><p data-lake-id="u7681a53c" id="u7681a53c"><span data-lake-id="ud24481a1" id="ud24481a1">OJ的两种类型：</span></p><p data-lake-id="u22f9fcf9" id="u22f9fcf9"><span data-lake-id="ucae79c2b" id="ucae79c2b">1，IO型	(牛客居多</span></p><p data-lake-id="u8f4861e1" id="u8f4861e1"><span data-lake-id="u9a45d118" id="u9a45d118">2，接口型 （leetcode居多</span></p><p data-lake-id="uca8c2563" id="uca8c2563"><span data-lake-id="u28aa41f1" id="u28aa41f1" class="lake-fontsize-12" style="color: rgb(65,131,196)">​</span><br></p><h1 data-lake-id="nLtfn" id="nLtfn"><span data-lake-id="u7c78aaba" id="u7c78aaba">Lesson3--顺序表和链表  --0：34：43</span></h1><h2 data-lake-id="dhmRy" id="dhmRy"><span data-lake-id="uebc3ee02" id="uebc3ee02">1.线性表</span></h2><p data-lake-id="u23a910ed" id="u23a910ed"><span data-lake-id="u0a7ee25f" id="u0a7ee25f" class="lake-fontsize-12" style="color: rgb(119,119,119)">线性表</span><span data-lake-id="u7bc1aa45" id="u7bc1aa45" class="lake-fontsize-12" style="color: rgb(119,119,119)">（</span><em><span data-lake-id="u36185172" id="u36185172" class="lake-fontsize-12" style="color: rgb(119,119,119)">linear list</span></em><span data-lake-id="u06563aa8" id="u06563aa8" class="lake-fontsize-12" style="color: rgb(119,119,119)">）</span><span data-lake-id="u401c2e4a" id="u401c2e4a" class="lake-fontsize-12" style="color: rgb(119,119,119)">是</span><span data-lake-id="u8f9d281f" id="u8f9d281f" class="lake-fontsize-12" style="color: rgb(119,119,119)">n</span><span data-lake-id="uef189fcf" id="uef189fcf" class="lake-fontsize-12" style="color: rgb(119,119,119)">个具有相同特性的数据元素的有限序列。 线性表是一种在实际中广泛使 </span></p><p data-lake-id="u561ad610" id="u561ad610"><span data-lake-id="udcff4cdf" id="udcff4cdf" class="lake-fontsize-12" style="color: rgb(119,119,119)">用的数据结构，常见的线性表：顺序表、链表、栈、队列、字符串...</span></p><p data-lake-id="u104218a4" id="u104218a4"><span data-lake-id="u8e29de46" id="u8e29de46" class="lake-fontsize-12" style="color: rgb(119,119,119)">线性表在逻辑上是线性结构，也就说是连续的一条直线。但是在物理结构上并不一定是连续的， </span></p><p data-lake-id="u6ffcd93e" id="u6ffcd93e"><span data-lake-id="u1e099cb3" id="u1e099cb3" class="lake-fontsize-12" style="color: rgb(119,119,119)">线性表在物理上存储时，通常以数组和链式结构的形式存储。</span></p><h2 data-lake-id="ILa2h" id="ILa2h" collapsed="true"><span data-lake-id="u3ef31466" id="u3ef31466">2.顺序表</span></h2><h2 data-lake-id="aPzqu" id="aPzqu"><span data-lake-id="u3df6d885" id="u3df6d885">3.链表</span></h2><h2 data-lake-id="OudDG" id="OudDG"><span data-lake-id="ua2843d36" id="ua2843d36">4.顺序表和链表的区别和联系</span></h2><p data-lake-id="u63ccc594" id="u63ccc594"><br></p>